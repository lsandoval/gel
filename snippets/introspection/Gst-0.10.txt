enum ActivateMode
	none = 0
	push = 1
	pull = 2
struct AllocTrace
	method print()
		Returns: void
	method set_flags()
		Returns: void
		flags: interface for AllocTraceFlags
	method available()
		Returns: gboolean
	method live_all()
		Returns: gint32
	method print_all()
		Returns: void
	method print_live()
		Returns: void
	method set_flags_all()
		Returns: void
		flags: interface for AllocTraceFlags
	field .name
	field .flags
	field .live
	field .mem_live
flags AllocTraceFlags
	none = 0
	live = 1
	mem_live = 2
flags AssocFlags
	none = 0
	key_unit = 1
	delta_unit = 2
	last = 256
struct AtomicQueue
	method length()
		Returns: guint32
	method push()
		Returns: void
		data: void
	method ref()
		Returns: void
	method unref()
		Returns: void
constant BUFFER_OFFSET_NONE
	value = -1: gint32
constant BUFFER_TRACE_NAME
	value = 37854768: utf8
object Bin
	typename = GstBin
	method new()
		Returns: interface for Element
		name: utf8
	method add()
		Returns: gboolean
		element: interface for Element
	method find_unconnected_pad()
		Returns: interface for Pad
		direction: interface for PadDirection
	method find_unlinked_pad()
		Returns: interface for Pad
		direction: interface for PadDirection
	method get_by_interface()
		Returns: interface for Element
		iface: GType
	method get_by_name()
		Returns: interface for Element
		name: utf8
	method get_by_name_recurse_up()
		Returns: interface for Element
		name: utf8
	method recalculate_latency()
		Returns: gboolean
	method remove()
		Returns: gboolean
		element: interface for Element
	vfunc (*add_element)()
		Returns: gboolean
		element: interface for Element
	vfunc (*do_latency)()
		Returns: gboolean
	vfunc (*element_added)()
		Returns: void
		child: interface for Element
	vfunc (*element_removed)()
		Returns: void
		child: interface for Element
	vfunc (*handle_message)()
		Returns: void
		message: interface for Message
	vfunc (*remove_element)()
		Returns: gboolean
		element: interface for Element
	property :async-handling: gboolean
	property :message-forward: gboolean
	signal ::do-latency
		Returns: gboolean
	signal ::element-added
		Returns: void
		element: interface for Element
	signal ::element-removed
		Returns: void
		element: interface for Element
	field .element
	field .numchildren
	field .children
	field .children_cookie
	field .child_bus
	field .messages
	field .polling
	field .state_dirty
	field .clock_dirty
	field .provided_clock
	field .clock_provider
	field .priv
	field ._gst_reserved
struct BinClass
	field .parent_class
	field .pool
	field .element_added
	field .element_removed
	field .add_element
	field .remove_element
	field .handle_message
	field .do_latency
	field ._gst_reserved
flags BinFlags
	bin_flag_last = 33554432
struct BinPrivate
object Buffer
	typename = GstBuffer
	method new()
		Returns: interface for Buffer
	method new_and_alloc()
		Returns: interface for Buffer
		size: guint32
	method try_new_and_alloc()
		Returns: interface for Buffer
		size: guint32
	method copy_metadata()
		Returns: void
		src: interface for Buffer
		flags: interface for BufferCopyFlags
	method create_sub()
		Returns: interface for Buffer
		offset: guint32
		size: guint32
	method get_caps()
		Returns: interface for Caps
	method get_qdata()
		Returns: interface for Structure
		quark: guint32
	method is_metadata_writable()
		Returns: gboolean
	method is_span_fast()
		Returns: gboolean
		buf2: interface for Buffer
	method join()
		Returns: interface for Buffer
		buf2: interface for Buffer
	method make_metadata_writable()
		Returns: interface for Buffer
	method merge()
		Returns: interface for Buffer
		buf2: interface for Buffer
	method set_caps()
		Returns: void
		caps: interface for Caps
	method set_qdata()
		Returns: void
		quark: guint32
		data: interface for Structure
	method span()
		Returns: interface for Buffer
		offset: guint32
		buf2: interface for Buffer
		len: guint32
	method stamp()
		Returns: void
		src: interface for Buffer
	field .mini_object
	field .data
	field .size
	field .timestamp
	field .duration
	field .caps
	field .offset
	field .offset_end
	field .malloc_data
	field .free_func
	field .parent
	field .priv
	field ._gst_reserved
struct BufferClass
	field .mini_object_class
flags BufferCopyFlags
	flags = 1
	timestamps = 2
	caps = 4
	qdata = 8
flags BufferFlag
	readonly = 1
	media4 = 2
	preroll = 16
	discont = 32
	in_caps = 64
	gap = 128
	delta_unit = 256
	media1 = 512
	media2 = 1024
	media3 = 2048
	last = 4096
object BufferList
	typename = GstBufferList
	method new()
		Returns: interface for BufferList
	method foreach()
		Returns: void
		func: interface for BufferListFunc
		user_data: void
	method get()
		Returns: interface for Buffer
		group: guint32
		idx: guint32
	method iterate()
		Returns: interface for BufferListIterator
	method n_groups()
		Returns: guint32
struct BufferListClass
callback BufferListDoFunction
	Returns: interface for Buffer
	buffer: interface for Buffer
	user_data: void
callback BufferListFunc
	Returns: interface for BufferListItem
	buffer: interface for Buffer
	group: guint32
	idx: guint32
	user_data: void
enum BufferListItem
	continue = 0
	skip_group = 1
	end = 2
struct BufferListIterator
	typename = GstBufferListIterator
	method add()
		Returns: void
		buffer: interface for Buffer
	method add_group()
		Returns: void
	method add_list()
		Returns: void
		list: glist
	method do()
		Returns: interface for Buffer
		do_func: interface for BufferListDoFunction
		user_data: void
	method free()
		Returns: void
	method merge_group()
		Returns: interface for Buffer
	method n_buffers()
		Returns: guint32
	method next()
		Returns: interface for Buffer
	method next_group()
		Returns: gboolean
	method remove()
		Returns: void
	method steal()
		Returns: interface for Buffer
	method take()
		Returns: void
		buffer: interface for Buffer
struct BufferPrivate
enum BufferingMode
	stream = 0
	download = 1
	timeshift = 2
	live = 3
object Bus
	typename = GstBus
	method new()
		Returns: interface for Bus
	method add_signal_watch()
		Returns: void
	method add_signal_watch_full()
		Returns: void
		priority: gint32
	method add_watch_full()
		Returns: guint32
		priority: gint32
		func: interface for BusFunc
		user_data: void
		notify: interface for DestroyNotify
	method async_signal_func()
		Returns: gboolean
		message: interface for Message
		data: void
	method create_watch()
		Returns: interface for Source
	method disable_sync_message_emission()
		Returns: void
	method enable_sync_message_emission()
		Returns: void
	method have_pending()
		Returns: gboolean
	method peek()
		Returns: interface for Message
	method poll()
		Returns: interface for Message
		events: interface for MessageType
		timeout: gint64
	method pop()
		Returns: interface for Message
	method pop_filtered()
		Returns: interface for Message
		types: interface for MessageType
	method post()
		Returns: gboolean
		message: interface for Message
	method remove_signal_watch()
		Returns: void
	method set_flushing()
		Returns: void
		flushing: gboolean
	method sync_signal_handler()
		Returns: interface for BusSyncReply
		message: interface for Message
		data: void
	method timed_pop()
		Returns: interface for Message
		timeout: guint64
	method timed_pop_filtered()
		Returns: interface for Message
		timeout: guint64
		types: interface for MessageType
	vfunc (*message)()
		Returns: void
		message: interface for Message
	vfunc (*sync_message)()
		Returns: void
		message: interface for Message
	signal ::message
		Returns: void
		message: interface for Message
	signal ::sync-message
		Returns: void
		message: interface for Message
	field .object
	field .queue
	field .queue_lock
	field .sync_handler
	field .sync_handler_data
	field .signal_watch_id
	field .num_signal_watchers
	field .priv
	field ._gst_reserved
struct BusClass
	field .parent_class
	field .message
	field .sync_message
	field ._gst_reserved
flags BusFlags
	flushing = 16
	flag_last = 32
callback BusFunc
	Returns: gboolean
	bus: interface for Bus
	message: interface for Message
	data: void
struct BusPrivate
callback BusSyncHandler
	Returns: interface for BusSyncReply
	bus: interface for Bus
	message: interface for Message
	data: void
enum BusSyncReply
	drop = 0
	pass = 1
	async = 2
constant CAN_INLINE
	value = 1: gint32
constant CLOCK_ENTRY_TRACE_NAME
	value = 37874688: utf8
constant CLOCK_TIME_NONE
	value = -1: gint32
struct Caps
	typename = GstCaps
	method new_any()
		Returns: interface for Caps
	method new_empty()
		Returns: interface for Caps
	method append()
		Returns: void
		caps2: interface for Caps
	method append_structure()
		Returns: void
		structure: interface for Structure
	method can_intersect()
		Returns: gboolean
		caps2: interface for Caps
	method copy()
		Returns: interface for Caps
	method copy_nth()
		Returns: interface for Caps
		nth: guint32
	method do_simplify()
		Returns: gboolean
	method get_size()
		Returns: guint32
	method get_structure()
		Returns: interface for Structure
		index: guint32
	method intersect()
		Returns: interface for Caps
		caps2: interface for Caps
	method intersect_full()
		Returns: interface for Caps
		caps2: interface for Caps
		mode: interface for CapsIntersectMode
	method is_always_compatible()
		Returns: gboolean
		caps2: interface for Caps
	method is_any()
		Returns: gboolean
	method is_empty()
		Returns: gboolean
	method is_equal()
		Returns: gboolean
		caps2: interface for Caps
	method is_equal_fixed()
		Returns: gboolean
		caps2: interface for Caps
	method is_fixed()
		Returns: gboolean
	method is_strictly_equal()
		Returns: gboolean
		caps2: interface for Caps
	method is_subset()
		Returns: gboolean
		superset: interface for Caps
	method is_subset_structure()
		Returns: gboolean
		structure: interface for Structure
	method make_writable()
		Returns: interface for Caps
	method merge()
		Returns: void
		caps2: interface for Caps
	method merge_structure()
		Returns: void
		structure: interface for Structure
	method normalize()
		Returns: interface for Caps
	method ref()
		Returns: interface for Caps
	method remove_structure()
		Returns: void
		idx: guint32
	method set_value()
		Returns: void
		field: utf8
		value: interface for Value
	method steal_structure()
		Returns: interface for Structure
		index: guint32
	method subtract()
		Returns: interface for Caps
		subtrahend: interface for Caps
	method to_string()
		Returns: utf8
	method truncate()
		Returns: void
	method union()
		Returns: interface for Caps
		caps2: interface for Caps
	method unref()
		Returns: void
	method from_string()
		Returns: interface for Caps
		string: utf8
	method load_thyself()
		Returns: interface for Caps
		parent: interface for NodePtr
	method replace()
		Returns: void
		caps: INOUT interface for Caps
		newcaps: interface for Caps
	field .type
	field .refcount
	field .flags
	field .structs
	field ._gst_reserved
flags CapsFlags
	none = 0
	any = 1
enum CapsIntersectMode
	zig_zag = 0
	first = 1
interface ChildProxy
	typename = GstChildProxy
	method child_added()
		Returns: void
		object: interface for Object
		child: interface for Object
	method child_removed()
		Returns: void
		object: interface for Object
		child: interface for Object
	method get_property()
		Returns: void
		object: interface for Object
		name: utf8
		value: OUT interface for Value
	method lookup()
		Returns: gboolean
		object: interface for Object
		name: utf8
		target: OUT interface for Object
		pspec: OUT interface for ParamSpec
	method set_property()
		Returns: void
		object: interface for Object
		name: utf8
		value: interface for Value
	method get_child_by_index()
		Returns: interface for Object
		index: guint32
	method get_child_by_name()
		Returns: interface for Object
		name: utf8
	method get_children_count()
		Returns: guint32
	vfunc (*child_added)()
		Returns: void
		child: interface for Object
	vfunc (*child_removed)()
		Returns: void
		child: interface for Object
	vfunc (*get_child_by_index)()
		Returns: interface for Object
		index: guint32
	vfunc (*get_children_count)()
		Returns: guint32
	signal ::child-added
		Returns: void
		object: interface for Object
	signal ::child-removed
		Returns: void
		object: interface for Object
	requires Object
struct ChildProxyInterface
	field .parent
	field .get_child_by_index
	field .get_children_count
	field .child_added
	field .child_removed
	field ._gst_reserved
object Clock
	typename = GstClock
	method id_compare_func()
		Returns: gint32
		id1: void
		id2: void
	method id_get_time()
		Returns: guint64
		id: void
	method id_ref()
		Returns: void
		id: void
	method id_unref()
		Returns: void
		id: void
	method id_unschedule()
		Returns: void
		id: void
	method id_wait()
		Returns: interface for ClockReturn
		id: void
		jitter: OUT gint64
	method id_wait_async_full()
		Returns: interface for ClockReturn
		id: void
		func: interface for ClockCallback
		user_data: void
		destroy_data: interface for DestroyNotify
	method add_observation()
		Returns: gboolean
		slave: guint64
		master: guint64
		r_squared: OUT gdouble
	method adjust_unlocked()
		Returns: guint64
		internal: guint64
	method get_calibration()
		Returns: void
		internal: OUT guint64
		external: OUT guint64
		rate_num: OUT guint64
		rate_denom: OUT guint64
	method get_internal_time()
		Returns: guint64
	method get_master()
		Returns: interface for Clock
	method get_resolution()
		Returns: guint64
	method get_time()
		Returns: guint64
	method new_periodic_id()
		Returns: void
		start_time: guint64
		interval: guint64
	method new_single_shot_id()
		Returns: void
		time: guint64
	method periodic_id_reinit()
		Returns: gboolean
		id: void
		start_time: guint64
		interval: guint64
	method set_calibration()
		Returns: void
		internal: guint64
		external: guint64
		rate_num: guint64
		rate_denom: guint64
	method set_master()
		Returns: gboolean
		master: interface for Clock
	method set_resolution()
		Returns: guint64
		resolution: guint64
	method single_shot_id_reinit()
		Returns: gboolean
		id: void
		time: guint64
	method unadjust_unlocked()
		Returns: guint64
		external: guint64
	vfunc (*change_resolution)()
		Returns: guint64
		old_resolution: guint64
		new_resolution: guint64
	vfunc (*get_internal_time)()
		Returns: guint64
	vfunc (*get_resolution)()
		Returns: guint64
	vfunc (*unschedule)()
		Returns: void
		entry: interface for ClockEntry
	vfunc (*wait)()
		Returns: interface for ClockReturn
		entry: interface for ClockEntry
	vfunc (*wait_async)()
		Returns: interface for ClockReturn
		entry: interface for ClockEntry
	vfunc (*wait_jitter)()
		Returns: interface for ClockReturn
		entry: interface for ClockEntry
		jitter: gint64
	property :stats: gboolean
	property :timeout: guint64
	property :window-size: gint32
	property :window-threshold: gint32
	field .object
	field .slave_lock
	field .internal_calibration
	field .external_calibration
	field .rate_numerator
	field .rate_denominator
	field .last_time
	field .entries
	field .entries_changed
	field .resolution
	field .stats
	field .master
	field .filling
	field .window_size
	field .window_threshold
	field .time_index
	field .timeout
	field .times
	field .clockid
callback ClockCallback
	Returns: gboolean
	clock: interface for Clock
	time: guint64
	id: void
	user_data: void
struct ClockClass
	field .parent_class
	field .change_resolution
	field .get_resolution
	field .get_internal_time
	field .wait
	field .wait_async
	field .unschedule
	field .wait_jitter
	field ._gst_reserved
struct ClockEntry
	field .refcount
	field .clock
	field .type
	field .time
	field .interval
	field .status
	field .func
	field .user_data
	field .destroy_data
	field .unscheduled
	field .woken_up
enum ClockEntryType
	single = 0
	periodic = 1
flags ClockFlags
	can_do_single_sync = 16
	can_do_single_async = 32
	can_do_periodic_sync = 64
	can_do_periodic_async = 128
	can_set_resolution = 256
	can_set_master = 512
	last = 4096
struct ClockPrivate
enum ClockReturn
	ok = 0
	early = 1
	unscheduled = 2
	busy = 3
	badtime = 4
	error = 5
	unsupported = 6
	done = 7
enum ClockType
	realtime = 0
	monotonic = 1
enum CoreError
	failed = 1
	too_lazy = 2
	not_implemented = 3
	state_change = 4
	pad = 5
	thread = 6
	negotiation = 7
	event = 8
	seek = 9
	caps = 10
	tag = 11
	missing_plugin = 12
	clock = 13
	disabled = 14
	num_errors = 15
constant DEBUG_BG_MASK
	value = 240: gint32
constant DEBUG_FG_MASK
	value = 15: gint32
constant DEBUG_FORMAT_MASK
	value = 65280: gint32
boxed Date
struct DateTime
	typename = GstDateTime
	method new()
		Returns: interface for DateTime
		tzoffset: gfloat
		year: gint32
		month: gint32
		day: gint32
		hour: gint32
		minute: gint32
		seconds: gdouble
	method new_from_unix_epoch_local_time()
		Returns: interface for DateTime
		secs: gint64
	method new_from_unix_epoch_utc()
		Returns: interface for DateTime
		secs: gint64
	method new_local_time()
		Returns: interface for DateTime
		year: gint32
		month: gint32
		day: gint32
		hour: gint32
		minute: gint32
		seconds: gdouble
	method new_now_local_time()
		Returns: interface for DateTime
	method new_now_utc()
		Returns: interface for DateTime
	method get_day()
		Returns: gint32
	method get_hour()
		Returns: gint32
	method get_microsecond()
		Returns: gint32
	method get_minute()
		Returns: gint32
	method get_month()
		Returns: gint32
	method get_second()
		Returns: gint32
	method get_time_zone_offset()
		Returns: gfloat
	method get_year()
		Returns: gint32
	method ref()
		Returns: interface for DateTime
	method unref()
		Returns: void
struct DebugCategory
	method free()
		Returns: void
	method get_color()
		Returns: guint32
	method get_description()
		Returns: utf8
	method get_name()
		Returns: utf8
	method get_threshold()
		Returns: interface for DebugLevel
	method reset_threshold()
		Returns: void
	method set_threshold()
		Returns: void
		level: interface for DebugLevel
	field .threshold
	field .color
	field .name
	field .description
enum DebugColorFlags
	fg_black = 0
	fg_red = 1
	fg_green = 2
	fg_yellow = 3
	fg_blue = 4
	fg_magenta = 5
	fg_cyan = 6
	fg_white = 7
	bg_black = 0
	bg_red = 16
	bg_green = 32
	bg_yellow = 48
	bg_blue = 64
	bg_magenta = 80
	bg_cyan = 96
	bg_white = 112
	bold = 256
	underline = 512
callback DebugFuncPtr
	Returns: void
flags DebugGraphDetails
	media_type = 1
	caps_details = 2
	non_default_params = 4
	states = 8
	all = 15
enum DebugLevel
	none = 0
	error = 1
	warning = 2
	info = 3
	debug = 4
	log = 5
	fixme = 6
	trace = 7
	memdump = 9
	count = 10
struct DebugMessage
	method get()
		Returns: utf8
object DoubleRange
	typename = GstDoubleRange
constant ELEMENT_FACTORY_KLASS_DECODER
	value = 37853264: utf8
constant ELEMENT_FACTORY_KLASS_DEMUXER
	value = 37853312: utf8
constant ELEMENT_FACTORY_KLASS_DEPAYLOADER
	value = 37853200: utf8
constant ELEMENT_FACTORY_KLASS_ENCODER
	value = 37853312: utf8
constant ELEMENT_FACTORY_KLASS_FORMATTER
	value = 37853200: utf8
constant ELEMENT_FACTORY_KLASS_MEDIA_AUDIO
	value = 37853952: utf8
constant ELEMENT_FACTORY_KLASS_MEDIA_IMAGE
	value = 37853264: utf8
constant ELEMENT_FACTORY_KLASS_MEDIA_METADATA
	value = 37853200: utf8
constant ELEMENT_FACTORY_KLASS_MEDIA_SUBTITLE
	value = 37853984: utf8
constant ELEMENT_FACTORY_KLASS_MEDIA_VIDEO
	value = 37853472: utf8
constant ELEMENT_FACTORY_KLASS_MUXER
	value = 37853264: utf8
constant ELEMENT_FACTORY_KLASS_PARSER
	value = 37853312: utf8
constant ELEMENT_FACTORY_KLASS_PAYLOADER
	value = 37853264: utf8
constant ELEMENT_FACTORY_KLASS_SINK
	value = 37853904: utf8
constant ELEMENT_FACTORY_KLASS_SRC
	value = 37853248: utf8
constant ELEMENT_FACTORY_TYPE_ANY
	value = -1: gint32
constant ELEMENT_FACTORY_TYPE_AUDIOVIDEO_SINKS
	value = 0: gint32
constant ELEMENT_FACTORY_TYPE_AUDIO_ENCODER
	value = 0: gint32
constant ELEMENT_FACTORY_TYPE_DECODABLE
	value = 0: gint32
constant ELEMENT_FACTORY_TYPE_DECODER
	value = 0: gint32
constant ELEMENT_FACTORY_TYPE_DEMUXER
	value = 0: gint32
constant ELEMENT_FACTORY_TYPE_DEPAYLOADER
	value = 0: gint32
constant ELEMENT_FACTORY_TYPE_ENCODER
	value = 0: gint32
constant ELEMENT_FACTORY_TYPE_FORMATTER
	value = 0: gint32
constant ELEMENT_FACTORY_TYPE_MAX_ELEMENTS
	value = 0: gint32
constant ELEMENT_FACTORY_TYPE_MEDIA_ANY
	value = 0: gint32
constant ELEMENT_FACTORY_TYPE_MEDIA_AUDIO
	value = 0: gint32
constant ELEMENT_FACTORY_TYPE_MEDIA_IMAGE
	value = 0: gint32
constant ELEMENT_FACTORY_TYPE_MEDIA_METADATA
	value = 0: gint32
constant ELEMENT_FACTORY_TYPE_MEDIA_SUBTITLE
	value = 0: gint32
constant ELEMENT_FACTORY_TYPE_MEDIA_VIDEO
	value = 0: gint32
constant ELEMENT_FACTORY_TYPE_MUXER
	value = 0: gint32
constant ELEMENT_FACTORY_TYPE_PARSER
	value = 0: gint32
constant ELEMENT_FACTORY_TYPE_PAYLOADER
	value = 0: gint32
constant ELEMENT_FACTORY_TYPE_SINK
	value = 0: gint32
constant ELEMENT_FACTORY_TYPE_SRC
	value = 0: gint32
constant ELEMENT_FACTORY_TYPE_VIDEO_ENCODER
	value = 0: gint32
constant ERROR_SYSTEM
	value = 37853792: utf8
constant EVENT_TRACE_NAME
	value = 37853664: utf8
constant EVENT_TYPE_BOTH
	value = 0: gint32
constant EVENT_TYPE_SHIFT
	value = 4: gint32
object Element
	typename = GstElement
	method make_from_uri()
		Returns: interface for Element
		type: interface for URIType
		uri: utf8
		elementname: utf8
	method register()
		Returns: gboolean
		plugin: interface for Plugin
		name: utf8
		rank: guint32
		type: GType
	method state_change_return_get_name()
		Returns: utf8
		state_ret: interface for StateChangeReturn
	method state_get_name()
		Returns: utf8
		state: interface for State
	method abort_state()
		Returns: void
	method add_pad()
		Returns: gboolean
		pad: interface for Pad
	method change_state()
		Returns: interface for StateChangeReturn
		transition: interface for StateChange
	method continue_state()
		Returns: interface for StateChangeReturn
		ret: interface for StateChangeReturn
	method create_all_pads()
		Returns: void
	method found_tags()
		Returns: void
		list: interface for TagList
	method found_tags_for_pad()
		Returns: void
		pad: interface for Pad
		list: interface for TagList
	method get_base_time()
		Returns: guint64
	method get_bus()
		Returns: interface for Bus
	method get_clock()
		Returns: interface for Clock
	method get_compatible_pad()
		Returns: interface for Pad
		pad: interface for Pad
		caps: interface for Caps
	method get_compatible_pad_template()
		Returns: interface for PadTemplate
		compattempl: interface for PadTemplate
	method get_factory()
		Returns: interface for ElementFactory
	method get_index()
		Returns: interface for Index
	method get_pad()
		Returns: interface for Pad
		name: utf8
	method get_query_types()
		Returns: interface for QueryType
	method get_request_pad()
		Returns: interface for Pad
		name: utf8
	method get_start_time()
		Returns: guint64
	method get_state()
		Returns: interface for StateChangeReturn
		state: OUT interface for State
		pending: OUT interface for State
		timeout: guint64
	method get_static_pad()
		Returns: interface for Pad
		name: utf8
	method implements_interface()
		Returns: gboolean
		iface_type: GType
	method is_indexable()
		Returns: gboolean
	method is_locked_state()
		Returns: gboolean
	method link()
		Returns: gboolean
		dest: interface for Element
	method link_filtered()
		Returns: gboolean
		dest: interface for Element
		filter: interface for Caps
	method link_pads()
		Returns: gboolean
		srcpadname: utf8
		dest: interface for Element
		destpadname: utf8
	method link_pads_filtered()
		Returns: gboolean
		srcpadname: utf8
		dest: interface for Element
		destpadname: utf8
		filter: interface for Caps
	method link_pads_full()
		Returns: gboolean
		srcpadname: utf8
		dest: interface for Element
		destpadname: utf8
		flags: interface for PadLinkCheck
	method lost_state()
		Returns: void
	method lost_state_full()
		Returns: void
		new_base_time: gboolean
	method message_full()
		Returns: void
		type: interface for MessageType
		domain: guint32
		code: gint32
		text: utf8
		debug: utf8
		file: utf8
		function: utf8
		line: gint32
	method no_more_pads()
		Returns: void
	method post_message()
		Returns: gboolean
		message: interface for Message
	method provide_clock()
		Returns: interface for Clock
	method provides_clock()
		Returns: gboolean
	method query()
		Returns: gboolean
		query: interface for Query
	method query_convert()
		Returns: gboolean
		src_format: INOUT interface for Format
		src_val: gint64
		dest_format: INOUT interface for Format
		dest_val: OUT gint64
	method query_duration()
		Returns: gboolean
		format: INOUT interface for Format
		duration: OUT gint64
	method query_position()
		Returns: gboolean
		format: INOUT interface for Format
		cur: OUT gint64
	method release_request_pad()
		Returns: void
		pad: interface for Pad
	method remove_pad()
		Returns: gboolean
		pad: interface for Pad
	method request_pad()
		Returns: interface for Pad
		templ: interface for PadTemplate
		name: utf8
		caps: interface for Caps
	method requires_clock()
		Returns: gboolean
	method seek()
		Returns: gboolean
		rate: gdouble
		format: interface for Format
		flags: interface for SeekFlags
		cur_type: interface for SeekType
		cur: gint64
		stop_type: interface for SeekType
		stop: gint64
	method seek_simple()
		Returns: gboolean
		format: interface for Format
		seek_flags: interface for SeekFlags
		seek_pos: gint64
	method send_event()
		Returns: gboolean
		event: interface for Event
	method set_base_time()
		Returns: void
		time: guint64
	method set_bus()
		Returns: void
		bus: interface for Bus
	method set_clock()
		Returns: gboolean
		clock: interface for Clock
	method set_index()
		Returns: void
		index: interface for Index
	method set_locked_state()
		Returns: gboolean
		locked_state: gboolean
	method set_start_time()
		Returns: void
		time: guint64
	method set_state()
		Returns: interface for StateChangeReturn
		state: interface for State
	method sync_state_with_parent()
		Returns: gboolean
	method unlink()
		Returns: void
		dest: interface for Element
	method unlink_pads()
		Returns: void
		srcpadname: utf8
		dest: interface for Element
		destpadname: utf8
	vfunc (*change_state)()
		Returns: interface for StateChangeReturn
		transition: interface for StateChange
	vfunc (*get_index)()
		Returns: interface for Index
	vfunc (*get_query_types)()
		Returns: interface for QueryType
	vfunc (*get_state)()
		Returns: interface for StateChangeReturn
		state: OUT interface for State
		pending: OUT interface for State
		timeout: guint64
	vfunc (*no_more_pads)()
		Returns: void
	vfunc (*pad_added)()
		Returns: void
		pad: interface for Pad
	vfunc (*pad_removed)()
		Returns: void
		pad: interface for Pad
	vfunc (*provide_clock)()
		Returns: interface for Clock
	vfunc (*query)()
		Returns: gboolean
		query: interface for Query
	vfunc (*release_pad)()
		Returns: void
		pad: interface for Pad
	vfunc (*send_event)()
		Returns: gboolean
		event: interface for Event
	vfunc (*set_bus)()
		Returns: void
		bus: interface for Bus
	vfunc (*set_clock)()
		Returns: gboolean
		clock: interface for Clock
	vfunc (*set_index)()
		Returns: void
		index: interface for Index
	vfunc (*set_state)()
		Returns: interface for StateChangeReturn
		state: interface for State
	vfunc (*state_changed)()
		Returns: void
		oldstate: interface for State
		newstate: interface for State
		pending: interface for State
	signal ::no-more-pads
		Returns: void
	signal ::pad-added
		Returns: void
		new_pad: interface for Pad
	signal ::pad-removed
		Returns: void
		old_pad: interface for Pad
	field .object
	field .state_lock
	field .state_cond
	field .state_cookie
	field .current_state
	field .next_state
	field .pending_state
	field .last_return
	field .bus
	field .clock
	field .base_time
	field .numpads
	field .pads
	field .numsrcpads
	field .srcpads
	field .numsinkpads
	field .sinkpads
	field .pads_cookie
struct ElementClass
	method add_pad_template()
		Returns: void
		templ: interface for PadTemplate
	method add_static_pad_template()
		Returns: void
		templ: interface for StaticPadTemplate
	method get_pad_template()
		Returns: interface for PadTemplate
		name: utf8
	method get_pad_template_list()
		Returns: glist
	method set_details()
		Returns: void
		details: interface for ElementDetails
	method set_details_simple()
		Returns: void
		longname: utf8
		classification: utf8
		description: utf8
		author: utf8
	method set_documentation_uri()
		Returns: void
		uri: utf8
	method set_icon_name()
		Returns: void
		name: utf8
	field .parent_class
	field .details
	field .elementfactory
	field .padtemplates
	field .numpadtemplates
	field .pad_templ_cookie
	field .pad_added
	field .pad_removed
	field .no_more_pads
	field .request_new_pad
	field .release_pad
	field .get_state
	field .set_state
	field .change_state
	field .set_bus
	field .provide_clock
	field .set_clock
	field .get_index
	field .set_index
	field .send_event
	field .get_query_types
	field .query
	field .meta_data
	field .request_new_pad_full
	field .state_changed
	field ._gst_reserved
struct ElementDetails
	field .longname
	field .klass
	field .description
	field .author
	field ._gst_reserved
object ElementFactory
	typename = GstElementFactory
	method find()
		Returns: interface for ElementFactory
		name: utf8
	method list_filter()
		Returns: glist
		list: glist
		caps: interface for Caps
		direction: interface for PadDirection
		subsetonly: gboolean
	method list_get_elements()
		Returns: glist
		type: guint64
		minrank: interface for Rank
	method make()
		Returns: interface for Element
		factoryname: utf8
		name: utf8
	method can_sink_all_caps()
		Returns: gboolean
		caps: interface for Caps
	method can_sink_any_caps()
		Returns: gboolean
		caps: interface for Caps
	method can_sink_caps()
		Returns: gboolean
		caps: interface for Caps
	method can_src_all_caps()
		Returns: gboolean
		caps: interface for Caps
	method can_src_any_caps()
		Returns: gboolean
		caps: interface for Caps
	method can_src_caps()
		Returns: gboolean
		caps: interface for Caps
	method create()
		Returns: interface for Element
		name: utf8
	method get_author()
		Returns: utf8
	method get_description()
		Returns: utf8
	method get_documentation_uri()
		Returns: utf8
	method get_element_type()
		Returns: GType
	method get_icon_name()
		Returns: utf8
	method get_klass()
		Returns: utf8
	method get_longname()
		Returns: utf8
	method get_num_pad_templates()
		Returns: guint32
	method get_static_pad_templates()
		Returns: glist
	method get_uri_protocols()
		Returns: array of utf8
	method get_uri_type()
		Returns: gint32
	method has_interface()
		Returns: gboolean
		interfacename: utf8
	method list_is_type()
		Returns: gboolean
		type: guint64
	field .parent
	field .type
	field .details
	field .staticpadtemplates
	field .numpadtemplates
	field .uri_type
	field .uri_protocols
	field .interfaces
	field .meta_data
	field ._gst_reserved
struct ElementFactoryClass
	field .parent_class
	field ._gst_reserved
flags ElementFlags
	locked_state = 16
	is_sink = 32
	unparenting = 64
	is_source = 128
	flag_last = 1048576
object Event
	typename = GstEvent
	method new_buffer_size()
		Returns: interface for Event
		format: interface for Format
		minsize: gint64
		maxsize: gint64
		async: gboolean
	method new_custom()
		Returns: interface for Event
		type: interface for EventType
		structure: interface for Structure
	method new_eos()
		Returns: interface for Event
	method new_flush_start()
		Returns: interface for Event
	method new_flush_stop()
		Returns: interface for Event
	method new_latency()
		Returns: interface for Event
		latency: guint64
	method new_navigation()
		Returns: interface for Event
		structure: interface for Structure
	method new_new_segment()
		Returns: interface for Event
		update: gboolean
		rate: gdouble
		format: interface for Format
		start: gint64
		stop: gint64
		position: gint64
	method new_new_segment_full()
		Returns: interface for Event
		update: gboolean
		rate: gdouble
		applied_rate: gdouble
		format: interface for Format
		start: gint64
		stop: gint64
		position: gint64
	method new_qos()
		Returns: interface for Event
		proportion: gdouble
		diff: gint64
		timestamp: guint64
	method new_qos_full()
		Returns: interface for Event
		type: interface for QOSType
		proportion: gdouble
		diff: gint64
		timestamp: guint64
	method new_seek()
		Returns: interface for Event
		rate: gdouble
		format: interface for Format
		flags: interface for SeekFlags
		start_type: interface for SeekType
		start: gint64
		stop_type: interface for SeekType
		stop: gint64
	method new_sink_message()
		Returns: interface for Event
		msg: interface for Message
	method new_step()
		Returns: interface for Event
		format: interface for Format
		amount: guint64
		rate: gdouble
		flush: gboolean
		intermediate: gboolean
	method new_tag()
		Returns: interface for Event
		taglist: interface for TagList
	method type_get_flags()
		Returns: interface for EventTypeFlags
		type: interface for EventType
	method type_get_name()
		Returns: utf8
		type: interface for EventType
	method type_to_quark()
		Returns: guint32
		type: interface for EventType
	method get_seqnum()
		Returns: guint32
	method get_structure()
		Returns: interface for Structure
	method has_name()
		Returns: gboolean
		name: utf8
	method parse_buffer_size()
		Returns: void
		format: OUT interface for Format
		minsize: OUT gint64
		maxsize: OUT gint64
		async: OUT gboolean
	method parse_latency()
		Returns: void
		latency: OUT guint64
	method parse_new_segment()
		Returns: void
		update: OUT gboolean
		rate: OUT gdouble
		format: OUT interface for Format
		start: OUT gint64
		stop: OUT gint64
		position: OUT gint64
	method parse_new_segment_full()
		Returns: void
		update: OUT gboolean
		rate: OUT gdouble
		applied_rate: OUT gdouble
		format: OUT interface for Format
		start: OUT gint64
		stop: OUT gint64
		position: OUT gint64
	method parse_qos()
		Returns: void
		proportion: OUT gdouble
		diff: OUT gint64
		timestamp: OUT guint64
	method parse_qos_full()
		Returns: void
		type: OUT interface for QOSType
		proportion: OUT gdouble
		diff: OUT gint64
		timestamp: OUT guint64
	method parse_seek()
		Returns: void
		rate: OUT gdouble
		format: OUT interface for Format
		flags: OUT interface for SeekFlags
		start_type: OUT interface for SeekType
		start: OUT gint64
		stop_type: OUT interface for SeekType
		stop: OUT gint64
	method parse_sink_message()
		Returns: void
		msg: OUT interface for Message
	method parse_step()
		Returns: void
		format: OUT interface for Format
		amount: OUT guint64
		rate: OUT gdouble
		flush: OUT gboolean
		intermediate: OUT gboolean
	method parse_tag()
		Returns: void
		taglist: OUT interface for TagList
	method set_seqnum()
		Returns: void
		seqnum: guint32
	field .mini_object
	field .type
	field .timestamp
	field .src
	field .structure
struct EventClass
	field .mini_object_class
	field ._gst_reserved
flags EventType
	unknown = 0
	flush_start = 19
	flush_stop = 39
	eos = 86
	newsegment = 102
	tag = 118
	buffersize = 134
	sink_message = 150
	qos = 241
	seek = 257
	navigation = 273
	latency = 289
	step = 305
	custom_upstream = 513
	custom_downstream = 518
	custom_downstream_oob = 514
	custom_both = 519
	custom_both_oob = 515
flags EventTypeFlags
	upstream = 1
	downstream = 2
	serialized = 4
constant FOURCC_FORMAT
	value = 37853888: utf8
callback FilterFunc
	Returns: gboolean
	obj: void
	user_data: void
enum FlowReturn
	custom_success_2 = 102
	custom_success_1 = 101
	custom_success = 100
	resend = 1
	ok = 0
	not_linked = -1
	wrong_state = -2
	unexpected = -3
	not_negotiated = -4
	error = -5
	not_supported = -6
	custom_error = -100
	custom_error_1 = -101
	custom_error_2 = -102
enum Format
	undefined = 0
	default = 1
	bytes = 2
	time = 3
	buffers = 4
	percent = 5
struct FormatDefinition
	field .value
	field .nick
	field .description
	field .quark
object Fourcc
	typename = GstFourcc
object Fraction
	typename = GstFraction
object FractionRange
	typename = GstFractionRange
object GhostPad
	typename = GstGhostPad
	method new()
		Returns: interface for Pad
		name: utf8
		target: interface for Pad
	method new_from_template()
		Returns: interface for Pad
		name: utf8
		target: interface for Pad
		templ: interface for PadTemplate
	method new_no_target()
		Returns: interface for Pad
		name: utf8
		dir: interface for PadDirection
	method new_no_target_from_template()
		Returns: interface for Pad
		name: utf8
		templ: interface for PadTemplate
	method activate_pull_default()
		Returns: gboolean
		pad: interface for Pad
		active: gboolean
	method activate_push_default()
		Returns: gboolean
		pad: interface for Pad
		active: gboolean
	method internal_activate_pull_default()
		Returns: gboolean
		pad: interface for Pad
		active: gboolean
	method internal_activate_push_default()
		Returns: gboolean
		pad: interface for Pad
		active: gboolean
	method link_default()
		Returns: interface for PadLinkReturn
		pad: interface for Pad
		peer: interface for Pad
	method setcaps_default()
		Returns: gboolean
		pad: interface for Pad
		caps: interface for Caps
	method unlink_default()
		Returns: void
		pad: interface for Pad
	method construct()
		Returns: gboolean
	method get_target()
		Returns: interface for Pad
	method set_target()
		Returns: gboolean
		newtarget: interface for Pad
	field .pad
	field .priv
struct GhostPadClass
	field .parent_class
	field ._gst_reserved
struct GhostPadPrivate
constant INDEX_ID_INVALID
	value = -1: gint32
interface ImplementsInterface
	typename = GstImplementsInterface
	method cast()
		Returns: void
		from: void
		type: GType
	method check()
		Returns: gboolean
		from: void
		type: GType
	requires Element
struct ImplementsInterfaceClass
	field .parent
	field .supported
	field ._gst_reserved
object Index
	typename = GstIndex
	method new()
		Returns: interface for Index
	method add_associationv()
		Returns: interface for IndexEntry
		id: gint32
		flags: interface for AssocFlags
		n: gint32
		list: interface for IndexAssociation
	method add_format()
		Returns: interface for IndexEntry
		id: gint32
		format: interface for Format
	method add_id()
		Returns: interface for IndexEntry
		id: gint32
		description: utf8
	method add_object()
		Returns: interface for IndexEntry
		id: gint32
		key: utf8
		type: GType
		object: void
	method commit()
		Returns: void
		id: gint32
	method get_assoc_entry()
		Returns: interface for IndexEntry
		id: gint32
		method: interface for IndexLookupMethod
		flags: interface for AssocFlags
		format: interface for Format
		value: gint64
	method get_certainty()
		Returns: interface for IndexCertainty
	method get_group()
		Returns: gint32
	method get_writer_id()
		Returns: gboolean
		writer: interface for Object
		id: gint32
	method new_group()
		Returns: gint32
	method set_certainty()
		Returns: void
		certainty: interface for IndexCertainty
	method set_filter_full()
		Returns: void
		filter: interface for IndexFilter
		user_data: void
		user_data_destroy: interface for DestroyNotify
	method set_group()
		Returns: gboolean
		groupnum: gint32
	method set_resolver_full()
		Returns: void
		resolver: interface for IndexResolver
		user_data: void
		user_data_destroy: interface for DestroyNotify
	vfunc (*add_entry)()
		Returns: void
		entry: interface for IndexEntry
	vfunc (*commit)()
		Returns: void
		id: gint32
	vfunc (*entry_added)()
		Returns: void
		entry: interface for IndexEntry
	vfunc (*get_writer_id)()
		Returns: gboolean
		writer_id: gint32
		writer_string: utf8
	signal ::entry-added
		Returns: void
		arg1: interface for IndexEntry
	field .object
	field .groups
	field .curgroup
	field .maxgroup
	field .method
	field .resolver
	field .resolver_user_data
	field .filter
	field .filter_user_data
	field .filter_user_data_destroy
	field .writers
	field .last_id
	field .resolver_user_data_destroy
	field ._gst_reserved
struct IndexAssociation
	field .format
	field .value
enum IndexCertainty
	unknown = 0
	certain = 1
	fuzzy = 2
struct IndexClass
	field .parent_class
	field .get_writer_id
	field .commit
	field .add_entry
	field .get_assoc_entry
	field .entry_added
	field ._gst_reserved
struct IndexEntry
	typename = GstIndexEntry
	method assoc_map()
		Returns: gboolean
		format: interface for Format
		value: gint64
	method copy()
		Returns: interface for IndexEntry
	method free()
		Returns: void
	field .type
	field .id
enum IndexEntryType
	id = 0
	association = 1
	object = 2
	format = 3
object IndexFactory
	typename = GstIndexFactory
	method new()
		Returns: interface for IndexFactory
		name: utf8
		longdesc: utf8
		type: GType
	method find()
		Returns: interface for IndexFactory
		name: utf8
	method make()
		Returns: interface for Index
		name: utf8
	method create()
		Returns: interface for Index
	method destroy()
		Returns: void
	field .feature
	field .longdesc
	field .type
	field ._gst_reserved
struct IndexFactoryClass
	field .parent
	field ._gst_reserved
callback IndexFilter
	Returns: gboolean
	index: interface for Index
	entry: interface for IndexEntry
	user_data: void
flags IndexFlags
	writable = 16
	readable = 32
	flag_last = 4096
struct IndexGroup
	field .groupnum
	field .entries
	field .certainty
	field .peergroup
enum IndexLookupMethod
	exact = 0
	before = 1
	after = 2
callback IndexResolver
	Returns: gboolean
	index: interface for Index
	writer: interface for Object
	writer_string: utf8
	user_data: void
enum IndexResolverMethod
	custom = 0
	gtype = 1
	path = 2
object Int64Range
	typename = GstInt64Range
object IntRange
	typename = GstIntRange
struct Iterator
	method find_custom()
		Returns: void
		func: interface for CompareFunc
		user_data: void
	method fold()
		Returns: interface for IteratorResult
		func: interface for IteratorFoldFunction
		ret: interface for Value
		user_data: void
	method foreach()
		Returns: interface for IteratorResult
		func: interface for Func
		user_data: void
	method free()
		Returns: void
	method next()
		Returns: interface for IteratorResult
		elem: void
	method push()
		Returns: void
		other: interface for Iterator
	method resync()
		Returns: void
	field .next
	field .item
	field .resync
	field .free
	field .pushed
	field .type
	field .lock
	field .cookie
	field .master_cookie
	field ._gst_reserved
callback IteratorDisposeFunction
	Returns: void
	owner: void
callback IteratorFoldFunction
	Returns: gboolean
	item: void
	ret: interface for Value
	user_data: void
callback IteratorFreeFunction
	Returns: void
	it: interface for Iterator
enum IteratorItem
	skip = 0
	pass = 1
	end = 2
callback IteratorItemFunction
	Returns: interface for IteratorItem
	it: interface for Iterator
	item: void
callback IteratorNextFunction
	Returns: interface for IteratorResult
	it: interface for Iterator
	result: void
enum IteratorResult
	done = 0
	ok = 1
	resync = 2
	error = 3
callback IteratorResyncFunction
	Returns: void
	it: interface for Iterator
constant LICENSE_UNKNOWN
	value = 37894704: utf8
enum LibraryError
	failed = 1
	too_lazy = 2
	init = 3
	shutdown = 4
	settings = 5
	encode = 6
	num_errors = 7
callback LogFunction
	Returns: void
	category: interface for DebugCategory
	level: interface for DebugLevel
	file: utf8
	function: utf8
	line: gint32
	object: interface for Object
	message: interface for DebugMessage
	data: void
constant MESSAGE_TRACE_NAME
	value = 37894704: utf8
constant MSECOND
	value = 1000000: gint32
object Message
	typename = GstMessage
	method new_application()
		Returns: interface for Message
		src: interface for Object
		structure: interface for Structure
	method new_async_done()
		Returns: interface for Message
		src: interface for Object
	method new_async_start()
		Returns: interface for Message
		src: interface for Object
		new_base_time: gboolean
	method new_buffering()
		Returns: interface for Message
		src: interface for Object
		percent: gint32
	method new_clock_lost()
		Returns: interface for Message
		src: interface for Object
		clock: interface for Clock
	method new_clock_provide()
		Returns: interface for Message
		src: interface for Object
		clock: interface for Clock
		ready: gboolean
	method new_custom()
		Returns: interface for Message
		type: interface for MessageType
		src: interface for Object
		structure: interface for Structure
	method new_duration()
		Returns: interface for Message
		src: interface for Object
		format: interface for Format
		duration: gint64
	method new_element()
		Returns: interface for Message
		src: interface for Object
		structure: interface for Structure
	method new_eos()
		Returns: interface for Message
		src: interface for Object
	method new_error()
		Returns: interface for Message
		src: interface for Object
		error: error
		debug: utf8
	method new_info()
		Returns: interface for Message
		src: interface for Object
		error: error
		debug: utf8
	method new_latency()
		Returns: interface for Message
		src: interface for Object
	method new_new_clock()
		Returns: interface for Message
		src: interface for Object
		clock: interface for Clock
	method new_progress()
		Returns: interface for Message
		src: interface for Object
		type: interface for ProgressType
		code: utf8
		text: utf8
	method new_qos()
		Returns: interface for Message
		src: interface for Object
		live: gboolean
		running_time: guint64
		stream_time: guint64
		timestamp: guint64
		duration: guint64
	method new_request_state()
		Returns: interface for Message
		src: interface for Object
		state: interface for State
	method new_segment_done()
		Returns: interface for Message
		src: interface for Object
		format: interface for Format
		position: gint64
	method new_segment_start()
		Returns: interface for Message
		src: interface for Object
		format: interface for Format
		position: gint64
	method new_state_changed()
		Returns: interface for Message
		src: interface for Object
		oldstate: interface for State
		newstate: interface for State
		pending: interface for State
	method new_state_dirty()
		Returns: interface for Message
		src: interface for Object
	method new_step_done()
		Returns: interface for Message
		src: interface for Object
		format: interface for Format
		amount: guint64
		rate: gdouble
		flush: gboolean
		intermediate: gboolean
		duration: guint64
		eos: gboolean
	method new_step_start()
		Returns: interface for Message
		src: interface for Object
		active: gboolean
		format: interface for Format
		amount: guint64
		rate: gdouble
		flush: gboolean
		intermediate: gboolean
	method new_stream_status()
		Returns: interface for Message
		src: interface for Object
		type: interface for StreamStatusType
		owner: interface for Element
	method new_structure_change()
		Returns: interface for Message
		src: interface for Object
		type: interface for StructureChangeType
		owner: interface for Element
		busy: gboolean
	method new_tag()
		Returns: interface for Message
		src: interface for Object
		tag_list: interface for TagList
	method new_tag_full()
		Returns: interface for Message
		src: interface for Object
		pad: interface for Pad
		tag_list: interface for TagList
	method new_warning()
		Returns: interface for Message
		src: interface for Object
		error: error
		debug: utf8
	method type_get_name()
		Returns: utf8
		type: interface for MessageType
	method type_to_quark()
		Returns: guint32
		type: interface for MessageType
	method get_seqnum()
		Returns: guint32
	method get_stream_status_object()
		Returns: interface for Value
	method get_structure()
		Returns: interface for Structure
	method parse_async_start()
		Returns: void
		new_base_time: OUT gboolean
	method parse_buffering()
		Returns: void
		percent: OUT gint32
	method parse_buffering_stats()
		Returns: void
		mode: OUT interface for BufferingMode
		avg_in: OUT gint32
		avg_out: OUT gint32
		buffering_left: OUT gint64
	method parse_clock_lost()
		Returns: void
		clock: OUT interface for Clock
	method parse_clock_provide()
		Returns: void
		clock: OUT interface for Clock
		ready: OUT gboolean
	method parse_duration()
		Returns: void
		format: OUT interface for Format
		duration: OUT gint64
	method parse_error()
		Returns: void
		gerror: OUT error
		debug: OUT utf8
	method parse_info()
		Returns: void
		gerror: OUT error
		debug: OUT utf8
	method parse_new_clock()
		Returns: void
		clock: OUT interface for Clock
	method parse_progress()
		Returns: void
		type: OUT interface for ProgressType
		code: OUT utf8
		text: OUT utf8
	method parse_qos()
		Returns: void
		live: OUT gboolean
		running_time: OUT guint64
		stream_time: OUT guint64
		timestamp: OUT guint64
		duration: OUT guint64
	method parse_qos_stats()
		Returns: void
		format: OUT interface for Format
		processed: OUT guint64
		dropped: OUT guint64
	method parse_qos_values()
		Returns: void
		jitter: OUT gint64
		proportion: OUT gdouble
		quality: OUT gint32
	method parse_request_state()
		Returns: void
		state: OUT interface for State
	method parse_segment_done()
		Returns: void
		format: OUT interface for Format
		position: OUT gint64
	method parse_segment_start()
		Returns: void
		format: OUT interface for Format
		position: OUT gint64
	method parse_state_changed()
		Returns: void
		oldstate: OUT interface for State
		newstate: OUT interface for State
		pending: OUT interface for State
	method parse_step_done()
		Returns: void
		format: OUT interface for Format
		amount: OUT guint64
		rate: OUT gdouble
		flush: OUT gboolean
		intermediate: OUT gboolean
		duration: OUT guint64
		eos: OUT gboolean
	method parse_step_start()
		Returns: void
		active: OUT gboolean
		format: OUT interface for Format
		amount: OUT guint64
		rate: OUT gdouble
		flush: OUT gboolean
		intermediate: OUT gboolean
	method parse_stream_status()
		Returns: void
		type: OUT interface for StreamStatusType
		owner: OUT interface for Element
	method parse_structure_change()
		Returns: void
		type: OUT interface for StructureChangeType
		owner: OUT interface for Element
		busy: OUT gboolean
	method parse_tag()
		Returns: void
		tag_list: OUT interface for TagList
	method parse_tag_full()
		Returns: void
		pad: OUT interface for Pad
		tag_list: OUT interface for TagList
	method parse_warning()
		Returns: void
		gerror: OUT error
		debug: OUT utf8
	method set_buffering_stats()
		Returns: void
		mode: interface for BufferingMode
		avg_in: gint32
		avg_out: gint32
		buffering_left: gint64
	method set_qos_stats()
		Returns: void
		format: interface for Format
		processed: guint64
		dropped: guint64
	method set_qos_values()
		Returns: void
		jitter: gint64
		proportion: gdouble
		quality: gint32
	method set_seqnum()
		Returns: void
		seqnum: guint32
	method set_stream_status_object()
		Returns: void
		object: interface for Value
	field .mini_object
	field .lock
	field .cond
	field .type
	field .timestamp
	field .src
	field .structure
struct MessageClass
	field .mini_object_class
	field ._gst_reserved
flags MessageType
	unknown = 0
	eos = 1
	error = 2
	warning = 4
	info = 8
	tag = 16
	buffering = 32
	state_changed = 64
	state_dirty = 128
	step_done = 256
	clock_provide = 512
	clock_lost = 1024
	new_clock = 2048
	structure_change = 4096
	stream_status = 8192
	application = 16384
	element = 32768
	segment_start = 65536
	segment_done = 131072
	duration = 262144
	latency = 524288
	async_start = 1048576
	async_done = 2097152
	request_state = 4194304
	step_start = 8388608
	qos = 16777216
	progress = 33554432
	any = -1
object MiniObject
	typename = GstMiniObject
	method new()
		Returns: interface for MiniObject
		type: GType
	method replace()
		Returns: void
		olddata: INOUT interface for MiniObject
		newdata: interface for MiniObject
	method copy()
		Returns: interface for MiniObject
	method is_writable()
		Returns: gboolean
	method make_writable()
		Returns: interface for MiniObject
	method ref()
		Returns: interface for MiniObject
	method unref()
		Returns: void
	field .instance
	field .refcount
	field .flags
	field .priv
struct MiniObjectClass
	field .type_class
	field .copy
	field .finalize
	field ._gst_reserved
callback MiniObjectFinalizeFunction
	Returns: void
	obj: interface for MiniObject
flags MiniObjectFlags
	readonly = 1
	reserved1 = 2
	last = 16
struct MiniObjectPrivate
callback MiniObjectWeakNotify
	Returns: void
	data: void
	where_the_mini_object_was: interface for MiniObject
constant NSECOND
	value = 1: gint32
object Object
	typename = GstObject
	method check_uniqueness()
		Returns: gboolean
		list: glist
		name: utf8
	method default_deep_notify()
		Returns: void
		object: interface for Object
		orig: interface for Object
		pspec: interface for ParamSpec
		excluded_props: utf8
	method ref()
		Returns: void
		object: void
	method ref_sink()
		Returns: void
		object: void
	method replace()
		Returns: void
		oldobj: INOUT interface for Object
		newobj: interface for Object
	method sink()
		Returns: void
		object: void
	method unref()
		Returns: void
		object: void
	method default_error()
		Returns: void
		error: error
		debug: utf8
	method get_name()
		Returns: utf8
	method get_name_prefix()
		Returns: utf8
	method get_parent()
		Returns: interface for Object
	method get_path_string()
		Returns: utf8
	method has_ancestor()
		Returns: gboolean
		ancestor: interface for Object
	method restore_thyself()
		Returns: void
		self: interface for NodePtr
	method set_name()
		Returns: gboolean
		name: utf8
	method set_name_prefix()
		Returns: void
		name_prefix: utf8
	method set_parent()
		Returns: gboolean
		parent: interface for Object
	method unparent()
		Returns: void
	vfunc (*deep_notify)()
		Returns: void
		orig: interface for Object
		pspec: interface for ParamSpec
	vfunc (*object_saved)()
		Returns: void
		parent: interface for NodePtr
	vfunc (*parent_set)()
		Returns: void
		parent: interface for Object
	vfunc (*parent_unset)()
		Returns: void
		parent: interface for Object
	vfunc (*restore_thyself)()
		Returns: void
		self: interface for NodePtr
	property :name: utf8
	signal ::deep-notify
		Returns: void
		prop_object: interface for Object
		prop: interface for ParamSpec
	signal ::object-saved
		Returns: void
		xml_node: void
	signal ::parent-set
		Returns: void
		parent: interface for Object
	signal ::parent-unset
		Returns: void
		parent: interface for Object
	field .object
	field .refcount
	field .lock
	field .name
	field .name_prefix
	field .parent
	field .flags
	field ._gst_reserved
struct ObjectClass
	field .parent_class
	field .path_string_separator
	field .signal_object
	field .lock
	field .parent_set
	field .parent_unset
	field .object_saved
	field .deep_notify
	field .save_thyself
	field .restore_thyself
	field ._gst_reserved
flags ObjectFlags
	disposing = 1
	floating = 2
	flag_last = 16
constant PARAM_CONTROLLABLE
	value = 2: gint32
constant PARAM_MUTABLE_PAUSED
	value = 8: gint32
constant PARAM_MUTABLE_PLAYING
	value = 16: gint32
constant PARAM_MUTABLE_READY
	value = 4: gint32
constant PARAM_USER_SHIFT
	value = 256: gint32
object Pad
	typename = GstPad
	method new()
		Returns: interface for Pad
		name: utf8
		direction: interface for PadDirection
	method new_from_static_template()
		Returns: interface for Pad
		templ: interface for StaticPadTemplate
		name: utf8
	method new_from_template()
		Returns: interface for Pad
		templ: interface for PadTemplate
		name: utf8
	method load_and_link()
		Returns: void
		self: interface for NodePtr
		parent: interface for Object
	method accept_caps()
		Returns: gboolean
		caps: interface for Caps
	method activate_pull()
		Returns: gboolean
		active: gboolean
	method activate_push()
		Returns: gboolean
		active: gboolean
	method add_buffer_probe_full()
		Returns: guint64
		handler: interface for Callback
		data: void
		notify: interface for DestroyNotify
	method add_data_probe_full()
		Returns: guint64
		handler: interface for Callback
		data: void
		notify: interface for DestroyNotify
	method add_event_probe_full()
		Returns: guint64
		handler: interface for Callback
		data: void
		notify: interface for DestroyNotify
	method alloc_buffer()
		Returns: interface for FlowReturn
		offset: guint64
		size: gint32
		caps: interface for Caps
		buf: interface for Buffer
	method alloc_buffer_and_set_caps()
		Returns: interface for FlowReturn
		offset: guint64
		size: gint32
		caps: interface for Caps
		buf: OUT interface for Buffer
	method can_link()
		Returns: gboolean
		sinkpad: interface for Pad
	method chain()
		Returns: interface for FlowReturn
		buffer: interface for Buffer
	method chain_list()
		Returns: interface for FlowReturn
		list: interface for BufferList
	method check_pull_range()
		Returns: gboolean
	method event_default()
		Returns: gboolean
		event: interface for Event
	method fixate_caps()
		Returns: void
		caps: interface for Caps
	method get_allowed_caps()
		Returns: interface for Caps
	method get_caps()
		Returns: interface for Caps
	method get_caps_reffed()
		Returns: interface for Caps
	method get_direction()
		Returns: interface for PadDirection
	method get_element_private()
		Returns: void
	method get_fixed_caps_func()
		Returns: interface for Caps
	method get_internal_links()
		Returns: glist
	method get_internal_links_default()
		Returns: glist
	method get_negotiated_caps()
		Returns: interface for Caps
	method get_pad_template()
		Returns: interface for PadTemplate
	method get_pad_template_caps()
		Returns: interface for Caps
	method get_parent_element()
		Returns: interface for Element
	method get_peer()
		Returns: interface for Pad
	method get_query_types()
		Returns: array of interface
	method get_query_types_default()
		Returns: array of interface
	method get_range()
		Returns: interface for FlowReturn
		offset: guint64
		size: guint32
		buffer: OUT interface for Buffer
	method is_active()
		Returns: gboolean
	method is_blocked()
		Returns: gboolean
	method is_blocking()
		Returns: gboolean
	method is_linked()
		Returns: gboolean
	method link()
		Returns: interface for PadLinkReturn
		sinkpad: interface for Pad
	method link_full()
		Returns: interface for PadLinkReturn
		sinkpad: interface for Pad
		flags: interface for PadLinkCheck
	method pause_task()
		Returns: gboolean
	method peer_accept_caps()
		Returns: gboolean
		caps: interface for Caps
	method peer_get_caps()
		Returns: interface for Caps
	method peer_get_caps_reffed()
		Returns: interface for Caps
	method peer_query()
		Returns: gboolean
		query: interface for Query
	method proxy_getcaps()
		Returns: interface for Caps
	method proxy_setcaps()
		Returns: gboolean
		caps: interface for Caps
	method pull_range()
		Returns: interface for FlowReturn
		offset: guint64
		size: guint32
		buffer: OUT interface for Buffer
	method push()
		Returns: interface for FlowReturn
		buffer: interface for Buffer
	method push_event()
		Returns: gboolean
		event: interface for Event
	method push_list()
		Returns: interface for FlowReturn
		list: interface for BufferList
	method query()
		Returns: gboolean
		query: interface for Query
	method query_convert()
		Returns: gboolean
		src_format: interface for Format
		src_val: gint64
		dest_format: INOUT interface for Format
		dest_val: OUT gint64
	method query_default()
		Returns: gboolean
		query: interface for Query
	method query_duration()
		Returns: gboolean
		format: INOUT interface for Format
		duration: OUT gint64
	method query_peer_convert()
		Returns: gboolean
		src_format: interface for Format
		src_val: gint64
		dest_format: INOUT interface for Format
		dest_val: OUT gint64
	method query_peer_duration()
		Returns: gboolean
		format: INOUT interface for Format
		duration: OUT gint64
	method query_peer_position()
		Returns: gboolean
		format: INOUT interface for Format
		cur: OUT gint64
	method query_position()
		Returns: gboolean
		format: INOUT interface for Format
		cur: OUT gint64
	method remove_buffer_probe()
		Returns: void
		handler_id: guint32
	method remove_data_probe()
		Returns: void
		handler_id: guint32
	method remove_event_probe()
		Returns: void
		handler_id: guint32
	method send_event()
		Returns: gboolean
		event: interface for Event
	method set_active()
		Returns: gboolean
		active: gboolean
	method set_blocked()
		Returns: gboolean
		blocked: gboolean
	method set_blocked_async_full()
		Returns: gboolean
		blocked: gboolean
		callback: interface for PadBlockCallback
		user_data: void
		destroy_data: interface for DestroyNotify
	method set_caps()
		Returns: gboolean
		caps: interface for Caps
	method set_element_private()
		Returns: void
		priv: void
	method stop_task()
		Returns: gboolean
	method unlink()
		Returns: gboolean
		sinkpad: interface for Pad
	method use_fixed_caps()
		Returns: void
	vfunc (*have_data)()
		Returns: gboolean
		data: interface for MiniObject
	vfunc (*linked)()
		Returns: void
		peer: interface for Pad
	vfunc (*request_link)()
		Returns: void
	vfunc (*unlinked)()
		Returns: void
		peer: interface for Pad
	property :caps: interface for Caps
	property :template: interface for PadTemplate
	signal ::have-data
		Returns: gboolean
		mini_obj: interface for MiniObject
	signal ::linked
		Returns: void
		peer: interface for Pad
	signal ::request-link
		Returns: void
	signal ::unlinked
		Returns: void
		peer: interface for Pad
	field .object
	field .element_private
	field .padtemplate
	field .direction
	field .stream_rec_lock
	field .task
	field .preroll_lock
	field .preroll_cond
	field .block_cond
	field .block_callback
	field .block_data
	field .caps
	field .getcapsfunc
	field .setcapsfunc
	field .acceptcapsfunc
	field .fixatecapsfunc
	field .activatefunc
	field .activatepushfunc
	field .activatepullfunc
	field .linkfunc
	field .unlinkfunc
	field .peer
	field .sched_private
	field .chainfunc
	field .checkgetrangefunc
	field .getrangefunc
	field .eventfunc
	field .mode
	field .querytypefunc
	field .queryfunc
	field .intlinkfunc
	field .bufferallocfunc
	field .do_buffer_signals
	field .do_event_signals
	field .iterintlinkfunc
	field .block_destroy_data
callback PadAcceptCapsFunction
	Returns: gboolean
	pad: interface for Pad
	caps: interface for Caps
callback PadActivateFunction
	Returns: gboolean
	pad: interface for Pad
callback PadActivateModeFunction
	Returns: gboolean
	pad: interface for Pad
	active: gboolean
callback PadBlockCallback
	Returns: void
	pad: interface for Pad
	blocked: gboolean
	user_data: void
callback PadBufferAllocFunction
	Returns: interface for FlowReturn
	pad: interface for Pad
	offset: guint64
	size: guint32
	caps: interface for Caps
	buf: interface for Buffer
callback PadChainFunction
	Returns: interface for FlowReturn
	pad: interface for Pad
	buffer: interface for Buffer
callback PadChainListFunction
	Returns: interface for FlowReturn
	pad: interface for Pad
	list: interface for BufferList
callback PadCheckGetRangeFunction
	Returns: gboolean
	pad: interface for Pad
struct PadClass
	field .parent_class
	field .linked
	field .unlinked
	field .request_link
	field .have_data
	field ._gst_reserved
enum PadDirection
	unknown = 0
	src = 1
	sink = 2
callback PadDispatcherFunction
	Returns: gboolean
	pad: interface for Pad
	data: void
callback PadEventFunction
	Returns: gboolean
	pad: interface for Pad
	event: interface for Event
callback PadFixateCapsFunction
	Returns: void
	pad: interface for Pad
	caps: interface for Caps
flags PadFlags
	blocked = 16
	flushing = 32
	in_getcaps = 64
	in_setcaps = 128
	blocking = 256
	flag_last = 4096
callback PadGetCapsFunction
	Returns: interface for Caps
	pad: interface for Pad
callback PadGetRangeFunction
	Returns: interface for FlowReturn
	pad: interface for Pad
	offset: guint64
	length: guint32
	buffer: interface for Buffer
callback PadIntLinkFunction
	Returns: glist
	pad: interface for Pad
flags PadLinkCheck
	nothing = 0
	hierarchy = 1
	template_caps = 2
	caps = 4
callback PadLinkFunction
	Returns: interface for PadLinkReturn
	pad: interface for Pad
	peer: interface for Pad
enum PadLinkReturn
	ok = 0
	wrong_hierarchy = -1
	was_linked = -2
	wrong_direction = -3
	noformat = -4
	nosched = -5
	refused = -6
enum PadPresence
	always = 0
	sometimes = 1
	request = 2
struct PadPrivate
callback PadQueryFunction
	Returns: gboolean
	pad: interface for Pad
	query: interface for Query
callback PadQueryTypeFunction
	Returns: interface for QueryType
	pad: interface for Pad
callback PadSetCapsFunction
	Returns: gboolean
	pad: interface for Pad
	caps: interface for Caps
object PadTemplate
	typename = GstPadTemplate
	method new()
		Returns: interface for PadTemplate
		name_template: utf8
		direction: interface for PadDirection
		presence: interface for PadPresence
		caps: interface for Caps
	method get_caps()
		Returns: interface for Caps
	method pad_created()
		Returns: void
		pad: interface for Pad
	vfunc (*pad_created)()
		Returns: void
		pad: interface for Pad
	property :caps: interface for Caps
	property :name-template: utf8
	signal ::pad-created
		Returns: void
		pad: interface for Pad
	field .object
	field .name_template
	field .direction
	field .presence
	field .caps
	field ._gst_reserved
struct PadTemplateClass
	field .parent_class
	field .pad_created
	field ._gst_reserved
flags PadTemplateFlags
	fixed = 16
	flag_last = 256
callback PadUnlinkFunction
	Returns: void
	pad: interface for Pad
object ParamFraction
	typename = GstParamFraction
struct ParamSpecFraction
	field .parent_instance
	field .min_num
	field .min_den
	field .max_num
	field .max_den
	field .def_num
	field .def_den
struct ParamSpecMiniObject
	field .parent_instance
struct ParseContext
	typename = GstParseContext
	method new()
		Returns: interface for ParseContext
	method free()
		Returns: void
	method get_missing_elements()
		Returns: array of utf8
enum ParseError
	syntax = 0
	no_such_element = 1
	no_such_property = 2
	link = 3
	could_not_set_property = 4
	empty_bin = 5
	empty = 6
flags ParseFlags
	none = 0
	fatal_errors = 1
object Pipeline
	typename = GstPipeline
	method new()
		Returns: interface for Element
		name: utf8
	method auto_clock()
		Returns: void
	method get_auto_flush_bus()
		Returns: gboolean
	method get_bus()
		Returns: interface for Bus
	method get_clock()
		Returns: interface for Clock
	method get_delay()
		Returns: guint64
	method get_last_stream_time()
		Returns: guint64
	method set_auto_flush_bus()
		Returns: void
		auto_flush: gboolean
	method set_clock()
		Returns: gboolean
		clock: interface for Clock
	method set_delay()
		Returns: void
		delay: guint64
	method set_new_stream_time()
		Returns: void
		time: guint64
	method use_clock()
		Returns: void
		clock: interface for Clock
	property :auto-flush-bus: gboolean
	property :delay: guint64
	field .bin
	field .fixed_clock
	field .stream_time
	field .delay
	field .priv
	field ._gst_reserved
struct PipelineClass
	field .parent_class
	field ._gst_reserved
flags PipelineFlags
	fixed_clock = 33554432
	last = 536870912
struct PipelinePrivate
object Plugin
	typename = GstPlugin
	method error_quark()
		Returns: guint32
	method list_free()
		Returns: void
		list: glist
	method load_by_name()
		Returns: interface for Plugin
		name: utf8
	method load_file()
		Returns: interface for Plugin
		filename: utf8
	method register_static()
		Returns: gboolean
		major_version: gint32
		minor_version: gint32
		name: utf8
		description: utf8
		init_func: interface for PluginInitFunc
		version: utf8
		license: utf8
		source: utf8
		package: utf8
		origin: utf8
	method register_static_full()
		Returns: gboolean
		major_version: gint32
		minor_version: gint32
		name: utf8
		description: utf8
		init_full_func: interface for PluginInitFullFunc
		version: utf8
		license: utf8
		source: utf8
		package: utf8
		origin: utf8
		user_data: void
	method add_dependency()
		Returns: void
		env_vars: utf8
		paths: utf8
		names: utf8
		flags: interface for PluginDependencyFlags
	method add_dependency_simple()
		Returns: void
		env_vars: utf8
		paths: utf8
		names: utf8
		flags: interface for PluginDependencyFlags
	method get_cache_data()
		Returns: interface for Structure
	method get_description()
		Returns: utf8
	method get_filename()
		Returns: utf8
	method get_license()
		Returns: utf8
	method get_module()
		Returns: interface for Module
	method get_name()
		Returns: utf8
	method get_origin()
		Returns: utf8
	method get_package()
		Returns: utf8
	method get_source()
		Returns: utf8
	method get_version()
		Returns: utf8
	method is_loaded()
		Returns: gboolean
	method load()
		Returns: interface for Plugin
	method name_filter()
		Returns: gboolean
		name: utf8
	method set_cache_data()
		Returns: void
		cache_data: interface for Structure
	field .object
	field .desc
	field .orig_desc
	field .flags
	field .filename
	field .basename
	field .module
	field .file_size
	field .file_mtime
	field .registered
	field .priv
	field ._gst_reserved
struct PluginClass
	field .object_class
	field ._gst_reserved
flags PluginDependencyFlags
	none = 0
	recurse = 1
	paths_are_default_only = 2
	file_name_is_suffix = 4
struct PluginDesc
	field .major_version
	field .minor_version
	field .name
	field .description
	field .plugin_init
	field .version
	field .license
	field .source
	field .package
	field .origin
	field .release_datetime
	field ._gst_reserved
enum PluginError
	module = 0
	dependencies = 1
	name_mismatch = 2
object PluginFeature
	typename = GstPluginFeature
	method list_copy()
		Returns: glist
		list: glist
	method list_debug()
		Returns: void
		list: glist
	method list_free()
		Returns: void
		list: glist
	method rank_compare_func()
		Returns: gint32
		p1: void
		p2: void
	method check_version()
		Returns: gboolean
		min_major: guint32
		min_minor: guint32
		min_micro: guint32
	method get_name()
		Returns: utf8
	method get_rank()
		Returns: guint32
	method load()
		Returns: interface for PluginFeature
	method set_name()
		Returns: void
		name: utf8
	method set_rank()
		Returns: void
		rank: guint32
	method type_name_filter()
		Returns: gboolean
		data: interface for TypeNameData
	field .object
	field .loaded
	field .name
	field .rank
	field .plugin_name
	field .plugin
	field ._gst_reserved
struct PluginFeatureClass
	field .parent_class
	field ._gst_reserved
callback PluginFeatureFilter
	Returns: gboolean
	feature: interface for PluginFeature
	user_data: void
callback PluginFilter
	Returns: gboolean
	plugin: interface for Plugin
	user_data: void
flags PluginFlags
	cached = 1
	blacklisted = 2
callback PluginInitFullFunc
	Returns: gboolean
	plugin: interface for Plugin
	user_data: void
callback PluginInitFunc
	Returns: gboolean
	plugin: interface for Plugin
struct PluginPrivate
struct Poll
	method add_fd()
		Returns: gboolean
		fd: interface for PollFD
	method fd_can_read()
		Returns: gboolean
		fd: interface for PollFD
	method fd_can_write()
		Returns: gboolean
		fd: interface for PollFD
	method fd_ctl_read()
		Returns: gboolean
		fd: interface for PollFD
		active: gboolean
	method fd_ctl_write()
		Returns: gboolean
		fd: interface for PollFD
		active: gboolean
	method fd_has_closed()
		Returns: gboolean
		fd: interface for PollFD
	method fd_has_error()
		Returns: gboolean
		fd: interface for PollFD
	method fd_ignored()
		Returns: void
		fd: interface for PollFD
	method free()
		Returns: void
	method get_read_gpollfd()
		Returns: void
		fd: interface for PollFD
	method read_control()
		Returns: gboolean
	method remove_fd()
		Returns: gboolean
		fd: interface for PollFD
	method restart()
		Returns: void
	method set_controllable()
		Returns: gboolean
		controllable: gboolean
	method set_flushing()
		Returns: void
		flushing: gboolean
	method wait()
		Returns: gint32
		timeout: guint64
	method write_control()
		Returns: gboolean
struct PollFD
	method init()
		Returns: void
	field .fd
	field .idx
interface Preset
	typename = GstPreset
	method get_app_dir()
		Returns: utf8
	method set_app_dir()
		Returns: gboolean
		app_dir: utf8
	method delete_preset()
		Returns: gboolean
		name: utf8
	method get_meta()
		Returns: gboolean
		name: utf8
		tag: utf8
		value: OUT utf8
	method get_preset_names()
		Returns: array of utf8
	method get_property_names()
		Returns: array of utf8
	method load_preset()
		Returns: gboolean
		name: utf8
	method rename_preset()
		Returns: gboolean
		old_name: utf8
		new_name: utf8
	method save_preset()
		Returns: gboolean
		name: utf8
	method set_meta()
		Returns: gboolean
		name: utf8
		tag: utf8
		value: utf8
	vfunc (*delete_preset)()
		Returns: gboolean
		name: utf8
	vfunc (*get_meta)()
		Returns: gboolean
		name: utf8
		tag: utf8
		value: OUT utf8
	vfunc (*get_preset_names)()
		Returns: array of utf8
	vfunc (*get_property_names)()
		Returns: array of utf8
	vfunc (*load_preset)()
		Returns: gboolean
		name: utf8
	vfunc (*rename_preset)()
		Returns: gboolean
		old_name: utf8
		new_name: utf8
	vfunc (*save_preset)()
		Returns: gboolean
		name: utf8
	vfunc (*set_meta)()
		Returns: gboolean
		name: utf8
		tag: utf8
		value: utf8
struct PresetInterface
	field .parent
	field .get_preset_names
	field .get_property_names
	field .load_preset
	field .save_preset
	field .rename_preset
	field .delete_preset
	field .set_meta
	field .get_meta
	field ._gst_reserved
enum ProgressType
	start = 0
	continue = 1
	complete = 2
	canceled = 3
	error = 4
object ProxyPad
	typename = GstProxyPad
	method acceptcaps_default()
		Returns: gboolean
		pad: interface for Pad
		caps: interface for Caps
	method bufferalloc_default()
		Returns: interface for FlowReturn
		pad: interface for Pad
		offset: guint64
		size: guint32
		caps: interface for Caps
		buf: interface for Buffer
	method chain_default()
		Returns: interface for FlowReturn
		pad: interface for Pad
		buffer: interface for Buffer
	method chain_list_default()
		Returns: interface for FlowReturn
		pad: interface for Pad
		list: interface for BufferList
	method checkgetrange_default()
		Returns: gboolean
		pad: interface for Pad
	method event_default()
		Returns: gboolean
		pad: interface for Pad
		event: interface for Event
	method fixatecaps_default()
		Returns: void
		pad: interface for Pad
		caps: interface for Caps
	method getcaps_default()
		Returns: interface for Caps
		pad: interface for Pad
	method getrange_default()
		Returns: interface for FlowReturn
		pad: interface for Pad
		offset: guint64
		size: guint32
		buffer: interface for Buffer
	method query_default()
		Returns: gboolean
		pad: interface for Pad
		query: interface for Query
	method query_type_default()
		Returns: array of interface
		pad: interface for Pad
	method setcaps_default()
		Returns: gboolean
		pad: interface for Pad
		caps: interface for Caps
	method unlink_default()
		Returns: void
		pad: interface for Pad
	method get_internal()
		Returns: interface for ProxyPad
	field .pad
	field .priv
struct ProxyPadClass
	field .parent_class
	field ._gst_reserved
struct ProxyPadPrivate
enum QOSType
	overflow = 0
	underflow = 1
	throttle = 2
object Query
	typename = GstQuery
	method new_application()
		Returns: interface for Query
		type: interface for QueryType
		structure: interface for Structure
	method new_buffering()
		Returns: interface for Query
		format: interface for Format
	method new_convert()
		Returns: interface for Query
		src_format: interface for Format
		value: gint64
		dest_format: interface for Format
	method new_duration()
		Returns: interface for Query
		format: interface for Format
	method new_formats()
		Returns: interface for Query
	method new_latency()
		Returns: interface for Query
	method new_position()
		Returns: interface for Query
		format: interface for Format
	method new_seeking()
		Returns: interface for Query
		format: interface for Format
	method new_segment()
		Returns: interface for Query
		format: interface for Format
	method new_uri()
		Returns: interface for Query
	method type_get_by_nick()
		Returns: interface for QueryType
		nick: utf8
	method type_get_details()
		Returns: interface for QueryTypeDefinition
		type: interface for QueryType
	method type_get_name()
		Returns: utf8
		query: interface for QueryType
	method type_register()
		Returns: interface for QueryType
		nick: utf8
		description: utf8
	method type_to_quark()
		Returns: guint32
		query: interface for QueryType
	method types_contains()
		Returns: gboolean
		types: interface for QueryType
		type: interface for QueryType
	method add_buffering_range()
		Returns: gboolean
		start: gint64
		stop: gint64
	method get_n_buffering_ranges()
		Returns: guint32
	method get_structure()
		Returns: interface for Structure
	method parse_buffering_percent()
		Returns: void
		busy: OUT gboolean
		percent: OUT gint32
	method parse_buffering_range()
		Returns: void
		format: OUT interface for Format
		start: OUT gint64
		stop: OUT gint64
		estimated_total: OUT gint64
	method parse_buffering_stats()
		Returns: void
		mode: OUT interface for BufferingMode
		avg_in: OUT gint32
		avg_out: OUT gint32
		buffering_left: OUT gint64
	method parse_convert()
		Returns: void
		src_format: OUT interface for Format
		src_value: OUT gint64
		dest_format: OUT interface for Format
		dest_value: OUT gint64
	method parse_duration()
		Returns: void
		format: OUT interface for Format
		duration: OUT gint64
	method parse_formats_length()
		Returns: void
		n_formats: OUT guint32
	method parse_formats_nth()
		Returns: void
		nth: OUT guint32
		format: OUT interface for Format
	method parse_latency()
		Returns: void
		live: OUT gboolean
		min_latency: OUT guint64
		max_latency: OUT guint64
	method parse_nth_buffering_range()
		Returns: gboolean
		index: guint32
		start: OUT gint64
		stop: OUT gint64
	method parse_position()
		Returns: void
		format: OUT interface for Format
		cur: OUT gint64
	method parse_seeking()
		Returns: void
		format: OUT interface for Format
		seekable: OUT gboolean
		segment_start: OUT gint64
		segment_end: OUT gint64
	method parse_segment()
		Returns: void
		rate: OUT gdouble
		format: OUT interface for Format
		start_value: OUT gint64
		stop_value: OUT gint64
	method parse_uri()
		Returns: void
		uri: OUT utf8
	method set_buffering_percent()
		Returns: void
		busy: gboolean
		percent: gint32
	method set_buffering_range()
		Returns: void
		format: interface for Format
		start: gint64
		stop: gint64
		estimated_total: gint64
	method set_buffering_stats()
		Returns: void
		mode: interface for BufferingMode
		avg_in: gint32
		avg_out: gint32
		buffering_left: gint64
	method set_convert()
		Returns: void
		src_format: interface for Format
		src_value: gint64
		dest_format: interface for Format
		dest_value: gint64
	method set_duration()
		Returns: void
		format: interface for Format
		duration: gint64
	method set_formatsv()
		Returns: void
		n_formats: gint32
		formats: array of interface
	method set_latency()
		Returns: void
		live: gboolean
		min_latency: guint64
		max_latency: guint64
	method set_position()
		Returns: void
		format: interface for Format
		cur: gint64
	method set_seeking()
		Returns: void
		format: interface for Format
		seekable: gboolean
		segment_start: gint64
		segment_end: gint64
	method set_segment()
		Returns: void
		rate: gdouble
		format: interface for Format
		start_value: gint64
		stop_value: gint64
	method set_uri()
		Returns: void
		uri: utf8
	field .mini_object
	field .type
	field .structure
	field ._gst_reserved
struct QueryClass
	field .mini_object_class
	field ._gst_reserved
enum QueryType
	none = 0
	position = 1
	duration = 2
	latency = 3
	jitter = 4
	rate = 5
	seeking = 6
	segment = 7
	convert = 8
	formats = 9
	buffering = 10
	custom = 11
	uri = 12
struct QueryTypeDefinition
	field .value
	field .nick
	field .description
	field .quark
enum Rank
	none = 0
	marginal = 64
	secondary = 128
	primary = 256
object Registry
	typename = GstRegistry
	method fork_is_enabled()
		Returns: gboolean
	method fork_set_enabled()
		Returns: void
		enabled: gboolean
	method get_default()
		Returns: interface for Registry
	method add_feature()
		Returns: gboolean
		feature: interface for PluginFeature
	method add_path()
		Returns: void
		path: utf8
	method add_plugin()
		Returns: gboolean
		plugin: interface for Plugin
	method feature_filter()
		Returns: glist
		filter: interface for PluginFeatureFilter
		first: gboolean
		user_data: void
	method find_feature()
		Returns: interface for PluginFeature
		name: utf8
		type: GType
	method find_plugin()
		Returns: interface for Plugin
		name: utf8
	method get_feature_list()
		Returns: glist
		type: GType
	method get_feature_list_by_plugin()
		Returns: glist
		name: utf8
	method get_feature_list_cookie()
		Returns: guint32
	method get_path_list()
		Returns: glist
	method get_plugin_list()
		Returns: glist
	method lookup()
		Returns: interface for Plugin
		filename: utf8
	method lookup_feature()
		Returns: interface for PluginFeature
		name: utf8
	method plugin_filter()
		Returns: glist
		filter: interface for PluginFilter
		first: gboolean
		user_data: void
	method remove_feature()
		Returns: void
		feature: interface for PluginFeature
	method remove_plugin()
		Returns: void
		plugin: interface for Plugin
	method scan_path()
		Returns: gboolean
		path: utf8
	method xml_read_cache()
		Returns: gboolean
		location: utf8
	method xml_write_cache()
		Returns: gboolean
		location: utf8
	vfunc (*feature_added)()
		Returns: void
		feature: interface for PluginFeature
	vfunc (*plugin_added)()
		Returns: void
		plugin: interface for Plugin
	signal ::feature-added
		Returns: void
		feature: void
	signal ::plugin-added
		Returns: void
		plugin: void
	field .object
	field .plugins
	field .features
	field .paths
	field .cache_file
	field .feature_hash
	field .basename_hash
	field .priv
	field ._gst_reserved
struct RegistryClass
	field .parent_class
	field .plugin_added
	field .feature_added
	field ._gst_reserved
struct RegistryPrivate
enum ResourceError
	failed = 1
	too_lazy = 2
	not_found = 3
	busy = 4
	open_read = 5
	open_write = 6
	open_read_write = 7
	close = 8
	read = 9
	write = 10
	seek = 11
	sync = 12
	settings = 13
	no_space_left = 14
	num_errors = 15
constant SECOND
	value = 1000000000: gint32
enum SearchMode
	exact = 0
	before = 1
	after = 2
flags SeekFlags
	none = 0
	flush = 1
	accurate = 2
	key_unit = 4
	segment = 8
	skip = 16
enum SeekType
	none = 0
	cur = 1
	set = 2
	end = 3
struct Segment
	typename = GstSegment
	method new()
		Returns: interface for Segment
	method clip()
		Returns: gboolean
		format: interface for Format
		start: gint64
		stop: gint64
		clip_start: OUT gint64
		clip_stop: OUT gint64
	method copy()
		Returns: interface for Segment
	method free()
		Returns: void
	method init()
		Returns: void
		format: interface for Format
	method set_duration()
		Returns: void
		format: interface for Format
		duration: gint64
	method set_last_stop()
		Returns: void
		format: interface for Format
		position: gint64
	method set_newsegment()
		Returns: void
		update: gboolean
		rate: gdouble
		format: interface for Format
		start: gint64
		stop: gint64
		time: gint64
	method set_newsegment_full()
		Returns: void
		update: gboolean
		rate: gdouble
		applied_rate: gdouble
		format: interface for Format
		start: gint64
		stop: gint64
		time: gint64
	method set_running_time()
		Returns: gboolean
		format: interface for Format
		running_time: gint64
	method set_seek()
		Returns: void
		rate: gdouble
		format: interface for Format
		flags: interface for SeekFlags
		start_type: interface for SeekType
		start: gint64
		stop_type: interface for SeekType
		stop: gint64
		update: gboolean
	method to_position()
		Returns: gint64
		format: interface for Format
		running_time: gint64
	method to_running_time()
		Returns: gint64
		format: interface for Format
		position: gint64
	method to_stream_time()
		Returns: gint64
		format: interface for Format
		position: gint64
	field .rate
	field .abs_rate
	field .format
	field .flags
	field .start
	field .stop
	field .time
	field .accum
	field .last_stop
	field .duration
	field .applied_rate
	field ._gst_reserved
enum State
	void_pending = 0
	null = 1
	ready = 2
	paused = 3
	playing = 4
flags StateChange
	null_to_ready = 10
	ready_to_paused = 19
	paused_to_playing = 28
	playing_to_paused = 35
	paused_to_ready = 26
	ready_to_null = 17
enum StateChangeReturn
	failure = 0
	success = 1
	async = 2
	no_preroll = 3
struct StaticCaps
	method get()
		Returns: interface for Caps
	field .caps
	field .string
	field ._gst_reserved
struct StaticPadTemplate
	method get()
		Returns: interface for PadTemplate
	method get_caps()
		Returns: interface for Caps
	field .name_template
	field .direction
	field .presence
	field .static_caps
enum StreamError
	failed = 1
	too_lazy = 2
	not_implemented = 3
	type_not_found = 4
	wrong_type = 5
	codec_not_found = 6
	decode = 7
	encode = 8
	demux = 9
	mux = 10
	format = 11
	decrypt = 12
	decrypt_nokey = 13
	num_errors = 14
enum StreamStatusType
	create = 0
	enter = 1
	leave = 2
	destroy = 3
	start = 8
	pause = 9
	stop = 10
struct Structure
	typename = GstStructure
	method empty_new()
		Returns: interface for Structure
		name: utf8
	method id_empty_new()
		Returns: interface for Structure
		quark: guint32
	method can_intersect()
		Returns: gboolean
		struct2: interface for Structure
	method copy()
		Returns: interface for Structure
	method fixate_field_boolean()
		Returns: gboolean
		field_name: utf8
		target: gboolean
	method fixate_field_nearest_double()
		Returns: gboolean
		field_name: utf8
		target: gdouble
	method fixate_field_nearest_fraction()
		Returns: gboolean
		field_name: utf8
		target_numerator: gint32
		target_denominator: gint32
	method fixate_field_nearest_int()
		Returns: gboolean
		field_name: utf8
		target: gint32
	method fixate_field_string()
		Returns: gboolean
		field_name: utf8
		target: utf8
	method foreach()
		Returns: gboolean
		func: interface for StructureForeachFunc
		user_data: void
	method free()
		Returns: void
	method get_boolean()
		Returns: gboolean
		fieldname: utf8
		value: OUT gboolean
	method get_clock_time()
		Returns: gboolean
		fieldname: utf8
		value: OUT guint64
	method get_date()
		Returns: gboolean
		fieldname: utf8
		value: OUT interface for Date
	method get_date_time()
		Returns: gboolean
		fieldname: utf8
		value: OUT interface for DateTime
	method get_double()
		Returns: gboolean
		fieldname: utf8
		value: OUT gdouble
	method get_enum()
		Returns: gboolean
		fieldname: utf8
		enumtype: GType
		value: OUT gint32
	method get_field_type()
		Returns: GType
		fieldname: utf8
	method get_fourcc()
		Returns: gboolean
		fieldname: utf8
		value: OUT guint32
	method get_fraction()
		Returns: gboolean
		fieldname: utf8
		value_numerator: OUT gint32
		value_denominator: OUT gint32
	method get_int()
		Returns: gboolean
		fieldname: utf8
		value: OUT gint32
	method get_name()
		Returns: utf8
	method get_name_id()
		Returns: guint32
	method get_string()
		Returns: utf8
		fieldname: utf8
	method get_uint()
		Returns: gboolean
		fieldname: utf8
		value: OUT guint32
	method get_value()
		Returns: interface for Value
		fieldname: utf8
	method has_field()
		Returns: gboolean
		fieldname: utf8
	method has_field_typed()
		Returns: gboolean
		fieldname: utf8
		type: GType
	method has_name()
		Returns: gboolean
		name: utf8
	method id_get_value()
		Returns: interface for Value
		field: guint32
	method id_has_field()
		Returns: gboolean
		field: guint32
	method id_has_field_typed()
		Returns: gboolean
		field: guint32
		type: GType
	method id_set_value()
		Returns: void
		field: guint32
		value: interface for Value
	method id_take_value()
		Returns: void
		field: guint32
		value: interface for Value
	method intersect()
		Returns: interface for Structure
		struct2: interface for Structure
	method is_equal()
		Returns: gboolean
		structure2: interface for Structure
	method is_subset()
		Returns: gboolean
		superset: interface for Structure
	method map_in_place()
		Returns: gboolean
		func: interface for StructureMapFunc
		user_data: void
	method n_fields()
		Returns: gint32
	method nth_field_name()
		Returns: utf8
		index: guint32
	method remove_all_fields()
		Returns: void
	method remove_field()
		Returns: void
		fieldname: utf8
	method set_name()
		Returns: void
		name: utf8
	method set_parent_refcount()
		Returns: void
		refcount: gint32
	method set_value()
		Returns: void
		fieldname: utf8
		value: interface for Value
	method take_value()
		Returns: void
		fieldname: utf8
		value: interface for Value
	method to_string()
		Returns: utf8
	method from_string()
		Returns: interface for Structure
		string: utf8
		end: OUT utf8
	field .type
	field .name
	field .parent_refcount
	field .fields
	field ._gst_reserved
enum StructureChangeType
	link = 0
	unlink = 1
callback StructureForeachFunc
	Returns: gboolean
	field_id: guint32
	value: interface for Value
	user_data: void
callback StructureMapFunc
	Returns: gboolean
	field_id: guint32
	value: interface for Value
	user_data: void
object SystemClock
	typename = GstSystemClock
	method obtain()
		Returns: interface for Clock
	field .clock
	field .thread
	field .stopping
	field .priv
	field ._gst_reserved
struct SystemClockClass
	field .parent_class
	field ._gst_reserved
struct SystemClockPrivate
constant TAG_ALBUM
	value = 37903120: utf8
constant TAG_ALBUM_ARTIST
	value = 37903008: utf8
constant TAG_ALBUM_ARTIST_SORTNAME
	value = 37903008: utf8
constant TAG_ALBUM_GAIN
	value = 37903008: utf8
constant TAG_ALBUM_PEAK
	value = 37903008: utf8
constant TAG_ALBUM_SORTNAME
	value = 37903008: utf8
constant TAG_ALBUM_VOLUME_COUNT
	value = 37903008: utf8
constant TAG_ALBUM_VOLUME_NUMBER
	value = 37903008: utf8
constant TAG_APPLICATION_DATA
	value = 37903008: utf8
constant TAG_APPLICATION_NAME
	value = 37902960: utf8
constant TAG_ARTIST
	value = 37902960: utf8
constant TAG_ARTIST_SORTNAME
	value = 37903008: utf8
constant TAG_ATTACHMENT
	value = 37903008: utf8
constant TAG_AUDIO_CODEC
	value = 37903008: utf8
constant TAG_BEATS_PER_MINUTE
	value = 37903008: utf8
constant TAG_BITRATE
	value = 37903008: utf8
constant TAG_CODEC
	value = 37903008: utf8
constant TAG_COMMENT
	value = 37903008: utf8
constant TAG_COMPOSER
	value = 37903008: utf8
constant TAG_COMPOSER_SORTNAME
	value = 37902960: utf8
constant TAG_CONTACT
	value = 37902960: utf8
constant TAG_CONTAINER_FORMAT
	value = 37903008: utf8
constant TAG_COPYRIGHT
	value = 37903008: utf8
constant TAG_COPYRIGHT_URI
	value = 37903008: utf8
constant TAG_DATE
	value = 37903008: utf8
constant TAG_DATE_TIME
	value = 37903008: utf8
constant TAG_DESCRIPTION
	value = 37903008: utf8
constant TAG_DEVICE_MANUFACTURER
	value = 37903008: utf8
constant TAG_DEVICE_MODEL
	value = 37903008: utf8
constant TAG_DURATION
	value = 37903072: utf8
constant TAG_ENCODED_BY
	value = 37903008: utf8
constant TAG_ENCODER
	value = 37903008: utf8
constant TAG_ENCODER_VERSION
	value = 37903008: utf8
constant TAG_EXTENDED_COMMENT
	value = 37903008: utf8
constant TAG_GENRE
	value = 37903008: utf8
constant TAG_GEO_LOCATION_CAPTURE_DIRECTION
	value = 37850112: utf8
constant TAG_GEO_LOCATION_CITY
	value = 37903008: utf8
constant TAG_GEO_LOCATION_COUNTRY
	value = 37903008: utf8
constant TAG_GEO_LOCATION_ELEVATION
	value = 37903008: utf8
constant TAG_GEO_LOCATION_HORIZONTAL_ERROR
	value = 37850112: utf8
constant TAG_GEO_LOCATION_LATITUDE
	value = 37903008: utf8
constant TAG_GEO_LOCATION_LONGITUDE
	value = 37903008: utf8
constant TAG_GEO_LOCATION_MOVEMENT_DIRECTION
	value = 37850112: utf8
constant TAG_GEO_LOCATION_MOVEMENT_SPEED
	value = 37850112: utf8
constant TAG_GEO_LOCATION_NAME
	value = 37903008: utf8
constant TAG_GEO_LOCATION_SUBLOCATION
	value = 37850112: utf8
constant TAG_GROUPING
	value = 37903136: utf8
constant TAG_HOMEPAGE
	value = 37903136: utf8
constant TAG_IMAGE
	value = 37903136: utf8
constant TAG_IMAGE_ORIENTATION
	value = 37902960: utf8
constant TAG_ISRC
	value = 37902960: utf8
constant TAG_KEYWORDS
	value = 37902960: utf8
constant TAG_LANGUAGE_CODE
	value = 37903008: utf8
constant TAG_LICENSE
	value = 37903008: utf8
constant TAG_LICENSE_URI
	value = 37903008: utf8
constant TAG_LOCATION
	value = 37903008: utf8
constant TAG_LYRICS
	value = 37903008: utf8
constant TAG_MAXIMUM_BITRATE
	value = 37902960: utf8
constant TAG_MINIMUM_BITRATE
	value = 37903008: utf8
constant TAG_NOMINAL_BITRATE
	value = 37902960: utf8
constant TAG_ORGANIZATION
	value = 37903008: utf8
constant TAG_PERFORMER
	value = 37903008: utf8
constant TAG_PREVIEW_IMAGE
	value = 37903008: utf8
constant TAG_REFERENCE_LEVEL
	value = 37902960: utf8
constant TAG_SERIAL
	value = 37903120: utf8
constant TAG_SHOW_EPISODE_NUMBER
	value = 37903008: utf8
constant TAG_SHOW_NAME
	value = 37903008: utf8
constant TAG_SHOW_SEASON_NUMBER
	value = 37903008: utf8
constant TAG_SHOW_SORTNAME
	value = 37903008: utf8
constant TAG_SUBTITLE_CODEC
	value = 37902960: utf8
constant TAG_TITLE
	value = 37902960: utf8
constant TAG_TITLE_SORTNAME
	value = 37903008: utf8
constant TAG_TRACK_COUNT
	value = 37903008: utf8
constant TAG_TRACK_GAIN
	value = 37903008: utf8
constant TAG_TRACK_NUMBER
	value = 37903008: utf8
constant TAG_TRACK_PEAK
	value = 37903008: utf8
constant TAG_USER_RATING
	value = 37903008: utf8
constant TAG_VERSION
	value = 37903008: utf8
constant TAG_VIDEO_CODEC
	value = 37903008: utf8
constant TIME_FORMAT
	value = 37903072: utf8
enum TagFlag
	undefined = 0
	meta = 1
	encoded = 2
	decoded = 3
	count = 4
callback TagForeachFunc
	Returns: void
	list: interface for TagList
	tag: utf8
	user_data: void
struct TagList
	typename = GstTagList
	method new()
		Returns: interface for TagList
	method new_from_string()
		Returns: interface for TagList
		str: utf8
	method add_value()
		Returns: void
		mode: interface for TagMergeMode
		tag: utf8
		value: interface for Value
	method copy()
		Returns: interface for TagList
	method foreach()
		Returns: void
		func: interface for TagForeachFunc
		user_data: void
	method free()
		Returns: void
	method get_boolean()
		Returns: gboolean
		tag: utf8
		value: OUT gboolean
	method get_boolean_index()
		Returns: gboolean
		tag: utf8
		index: guint32
		value: OUT gboolean
	method get_buffer()
		Returns: gboolean
		tag: utf8
		value: OUT interface for Buffer
	method get_buffer_index()
		Returns: gboolean
		tag: utf8
		index: guint32
		value: OUT interface for Buffer
	method get_char()
		Returns: gboolean
		tag: utf8
		value: OUT utf8
	method get_char_index()
		Returns: gboolean
		tag: utf8
		index: guint32
		value: OUT utf8
	method get_date()
		Returns: gboolean
		tag: utf8
		value: OUT interface for Date
	method get_date_index()
		Returns: gboolean
		tag: utf8
		index: guint32
		value: OUT interface for Date
	method get_date_time()
		Returns: gboolean
		tag: utf8
		value: OUT interface for DateTime
	method get_date_time_index()
		Returns: gboolean
		tag: utf8
		index: guint32
		value: OUT interface for DateTime
	method get_double()
		Returns: gboolean
		tag: utf8
		value: OUT gdouble
	method get_double_index()
		Returns: gboolean
		tag: utf8
		index: guint32
		value: OUT gdouble
	method get_float()
		Returns: gboolean
		tag: utf8
		value: OUT gfloat
	method get_float_index()
		Returns: gboolean
		tag: utf8
		index: guint32
		value: OUT gfloat
	method get_int()
		Returns: gboolean
		tag: utf8
		value: OUT gint32
	method get_int64()
		Returns: gboolean
		tag: utf8
		value: OUT gint64
	method get_int64_index()
		Returns: gboolean
		tag: utf8
		index: guint32
		value: OUT gint64
	method get_int_index()
		Returns: gboolean
		tag: utf8
		index: guint32
		value: OUT gint32
	method get_long()
		Returns: gboolean
		tag: utf8
		value: OUT gint64
	method get_long_index()
		Returns: gboolean
		tag: utf8
		index: guint32
		value: OUT gint64
	method get_pointer()
		Returns: gboolean
		tag: utf8
		value: OUT void
	method get_pointer_index()
		Returns: gboolean
		tag: utf8
		index: guint32
		value: OUT void
	method get_string()
		Returns: gboolean
		tag: utf8
		value: OUT utf8
	method get_string_index()
		Returns: gboolean
		tag: utf8
		index: guint32
		value: OUT utf8
	method get_tag_size()
		Returns: guint32
		tag: utf8
	method get_uchar()
		Returns: gboolean
		tag: utf8
		value: OUT guint8
	method get_uchar_index()
		Returns: gboolean
		tag: utf8
		index: guint32
		value: OUT guint8
	method get_uint()
		Returns: gboolean
		tag: utf8
		value: OUT guint32
	method get_uint64()
		Returns: gboolean
		tag: utf8
		value: OUT guint64
	method get_uint64_index()
		Returns: gboolean
		tag: utf8
		index: guint32
		value: OUT guint64
	method get_uint_index()
		Returns: gboolean
		tag: utf8
		index: guint32
		value: OUT guint32
	method get_ulong()
		Returns: gboolean
		tag: utf8
		value: OUT guint64
	method get_ulong_index()
		Returns: gboolean
		tag: utf8
		index: guint32
		value: OUT guint64
	method get_value_index()
		Returns: interface for Value
		tag: utf8
		index: guint32
	method insert()
		Returns: void
		from: interface for TagList
		mode: interface for TagMergeMode
	method is_empty()
		Returns: gboolean
	method is_equal()
		Returns: gboolean
		list2: interface for TagList
	method merge()
		Returns: interface for TagList
		list2: interface for TagList
		mode: interface for TagMergeMode
	method peek_string_index()
		Returns: gboolean
		tag: utf8
		index: guint32
		value: OUT utf8
	method remove_tag()
		Returns: void
		tag: utf8
	method to_string()
		Returns: utf8
	method copy_value()
		Returns: gboolean
		dest: OUT interface for Value
		list: interface for TagList
		tag: utf8
callback TagMergeFunc
	Returns: void
	dest: interface for Value
	src: interface for Value
enum TagMergeMode
	undefined = 0
	replace_all = 1
	replace = 2
	append = 3
	prepend = 4
	keep = 5
	keep_all = 6
	count = 7
interface TagSetter
	typename = GstTagSetter
	method add_tag_value()
		Returns: void
		mode: interface for TagMergeMode
		tag: utf8
		value: interface for Value
	method get_tag_list()
		Returns: interface for TagList
	method get_tag_merge_mode()
		Returns: interface for TagMergeMode
	method merge_tags()
		Returns: void
		list: interface for TagList
		mode: interface for TagMergeMode
	method reset_tags()
		Returns: void
	method set_tag_merge_mode()
		Returns: void
		mode: interface for TagMergeMode
	requires Element
struct TagSetterIFace
	field .g_iface
object Task
	typename = GstTask
	method cleanup_all()
		Returns: void
	method get_pool()
		Returns: interface for TaskPool
	method get_state()
		Returns: interface for TaskState
	method join()
		Returns: gboolean
	method pause()
		Returns: gboolean
	method set_lock()
		Returns: void
		mutex: interface for StaticRecMutex
	method set_pool()
		Returns: void
		pool: interface for TaskPool
	method set_priority()
		Returns: void
		priority: interface for ThreadPriority
	method set_state()
		Returns: gboolean
		state: interface for TaskState
	method set_thread_callbacks()
		Returns: void
		callbacks: interface for TaskThreadCallbacks
		user_data: void
		notify: interface for DestroyNotify
	method start()
		Returns: gboolean
	method stop()
		Returns: gboolean
	field .object
	field .state
	field .cond
	field .lock
	field .func
	field .data
	field .running
	field .priv
struct TaskClass
	field .parent_class
	field .pool
	field ._gst_reserved
callback TaskFunction
	Returns: void
	data: void
object TaskPool
	typename = GstTaskPool
	method new()
		Returns: interface for TaskPool
	method cleanup()
		Returns: void
	method join()
		Returns: void
		id: void
	method prepare()
		Returns: void
	vfunc (*cleanup)()
		Returns: void
	vfunc (*join)()
		Returns: void
		id: void
	vfunc (*prepare)()
		Returns: void
	field .object
	field .pool
	field ._gst_reserved
struct TaskPoolClass
	field .parent_class
	field .prepare
	field .cleanup
	field .push
	field .join
	field ._gst_reserved
callback TaskPoolFunction
	Returns: void
	data: void
struct TaskPrivate
enum TaskState
	started = 0
	stopped = 1
	paused = 2
struct TaskThreadCallbacks
	field .enter_thread
	field .leave_thread
	field ._gst_reserved
struct Trace
	method destroy()
		Returns: void
	method flush()
		Returns: void
	method set_default()
		Returns: void
	method text_flush()
		Returns: void
	method read_tsc()
		Returns: void
		dst: gint64
	field .filename
	field .fd
	field .buf
	field .bufsize
	field .bufoffset
struct TraceEntry
	field .timestamp
	field .sequence
	field .data
	field .message
struct TypeFind
	method get_length()
		Returns: guint64
	method peek()
		Returns: array of guint8
		offset: gint64
		size: OUT guint32
	method suggest()
		Returns: void
		probability: guint32
		caps: interface for Caps
	method register()
		Returns: gboolean
		plugin: interface for Plugin
		name: utf8
		rank: guint32
		func: interface for TypeFindFunction
		extensions: array of utf8
		possible_caps: interface for Caps
		data: void
		data_notify: interface for DestroyNotify
	field .peek
	field .suggest
	field .data
	field .get_length
	field ._gst_reserved
object TypeFindFactory
	typename = GstTypeFindFactory
	method get_list()
		Returns: glist
	method call_function()
		Returns: void
		find: interface for TypeFind
	method get_caps()
		Returns: interface for Caps
	method get_extensions()
		Returns: array of utf8
	field .feature
	field .function
	field .extensions
	field .caps
	field .user_data
	field .user_data_notify
	field ._gst_reserved
struct TypeFindFactoryClass
	field .parent
	field ._gst_reserved
callback TypeFindFunction
	Returns: void
	find: interface for TypeFind
	data: void
enum TypeFindProbability
	none = 0
	minimum = 1
	possible = 50
	likely = 80
	nearly_certain = 99
	maximum = 100
struct TypeNameData
	field .name
	field .type
interface URIHandler
	typename = GstURIHandler
	method get_protocols()
		Returns: array of utf8
	method get_uri()
		Returns: utf8
	method get_uri_type()
		Returns: guint32
	method new_uri()
		Returns: void
		uri: utf8
	method set_uri()
		Returns: gboolean
		uri: utf8
	vfunc (*get_uri)()
		Returns: utf8
	vfunc (*new_uri)()
		Returns: void
		uri: utf8
	vfunc (*set_uri)()
		Returns: gboolean
		uri: utf8
	signal ::new-uri
		Returns: void
		uri: utf8
struct URIHandlerInterface
	field .parent
	field .new_uri
	field .get_type
	field .get_protocols
	field .get_uri
	field .set_uri
	field .get_type_full
	field .get_protocols_full
	field ._gst_reserved
enum URIType
	unknown = 0
	sink = 1
	src = 2
constant USECOND
	value = 1000: gint32
constant VALUE_EQUAL
	value = 0: gint32
constant VALUE_GREATER_THAN
	value = 1: gint32
constant VALUE_LESS_THAN
	value = -1: gint32
constant VALUE_UNORDERED
	value = 2: gint32
object ValueArray
	typename = GstValueArray
	method append_value()
		Returns: void
		value: interface for Value
		append_value: interface for Value
	method get_size()
		Returns: guint32
		value: interface for Value
	method get_value()
		Returns: interface for Value
		value: interface for Value
		index: guint32
	method prepend_value()
		Returns: void
		value: interface for Value
		prepend_value: interface for Value
callback ValueCompareFunc
	Returns: gint32
	value1: interface for Value
	value2: interface for Value
callback ValueDeserializeFunc
	Returns: gboolean
	dest: interface for Value
	s: utf8
callback ValueIntersectFunc
	Returns: gboolean
	dest: OUT interface for Value
	value1: interface for Value
	value2: interface for Value
object ValueList
	typename = GstValueList
	method append_value()
		Returns: void
		value: interface for Value
		append_value: interface for Value
	method concat()
		Returns: void
		dest: OUT interface for Value
		value1: interface for Value
		value2: interface for Value
	method get_size()
		Returns: guint32
		value: interface for Value
	method get_value()
		Returns: interface for Value
		value: interface for Value
		index: guint32
	method merge()
		Returns: void
		dest: OUT interface for Value
		value1: interface for Value
		value2: interface for Value
	method prepend_value()
		Returns: void
		value: interface for Value
		prepend_value: interface for Value
callback ValueSerializeFunc
	Returns: utf8
	value1: interface for Value
callback ValueSubtractFunc
	Returns: gboolean
	dest: OUT interface for Value
	minuend: interface for Value
	subtrahend: interface for Value
struct ValueTable
	field .type
	field .compare
	field .serialize
	field .deserialize
	field ._gst_reserved
callback ValueUnionFunc
	Returns: gboolean
	dest: interface for Value
	value1: interface for Value
	value2: interface for Value
object XML
	typename = GstXML
	method new()
		Returns: interface for XML
	method write_file()
		Returns: gint32
		element: interface for Element
		out: void
	method parse_doc()
		Returns: gboolean
		doc: interface for DocPtr
		root: guint8
	method parse_file()
		Returns: gboolean
		fname: guint8
		root: guint8
	method parse_memory()
		Returns: gboolean
		buffer: guint8
		size: guint32
		root: utf8
	vfunc (*object_loaded)()
		Returns: void
		object: interface for Object
		self: interface for NodePtr
	vfunc (*object_saved)()
		Returns: void
		object: interface for Object
		self: interface for NodePtr
	signal ::object-loaded
		Returns: void
		object: interface for Object
		xml_node: void
	field .object
	field .topelements
	field .ns
	field ._gst_reserved
struct XMLClass
	field .parent_class
	field .object_loaded
	field .object_saved
	field ._gst_reserved
function alloc_trace_available
		Returns: gboolean
function alloc_trace_live_all
		Returns: gint32
function alloc_trace_print_all
		Returns: void
function alloc_trace_print_live
		Returns: void
function alloc_trace_set_flags_all
		Returns: void
		flags: interface for AllocTraceFlags
function atomic_int_set
		Returns: void
		atomic_int: INOUT gint32
		value: gint32
function caps_from_string
		Returns: interface for Caps
		string: utf8
function caps_load_thyself
		Returns: interface for Caps
		parent: interface for NodePtr
function caps_replace
		Returns: void
		caps: INOUT interface for Caps
		newcaps: interface for Caps
function child_proxy_child_added
		Returns: void
		object: interface for Object
		child: interface for Object
function child_proxy_child_removed
		Returns: void
		object: interface for Object
		child: interface for Object
function child_proxy_get_property
		Returns: void
		object: interface for Object
		name: utf8
		value: OUT interface for Value
function child_proxy_lookup
		Returns: gboolean
		object: interface for Object
		name: utf8
		target: OUT interface for Object
		pspec: OUT interface for ParamSpec
function child_proxy_set_property
		Returns: void
		object: interface for Object
		name: utf8
		value: interface for Value
function class_signal_connect
		Returns: guint32
		klass: interface for ObjectClass
		name: utf8
		func: void
		func_data: void
function class_signal_emit_by_name
		Returns: void
		object: interface for Object
		name: utf8
		self: interface for NodePtr
function core_error_quark
		Returns: guint32
function debug_construct_term_color
		Returns: utf8
		colorinfo: guint32
function debug_construct_win_color
		Returns: gint32
		colorinfo: guint32
function debug_get_all_categories
		Returns: gslist
function debug_get_default_threshold
		Returns: interface for DebugLevel
function debug_is_active
		Returns: gboolean
function debug_is_colored
		Returns: gboolean
function debug_level_get_name
		Returns: utf8
		level: interface for DebugLevel
function debug_log_default
		Returns: void
		category: interface for DebugCategory
		level: interface for DebugLevel
		file: utf8
		function: utf8
		line: gint32
		object: interface for Object
		message: interface for DebugMessage
		unused: void
function debug_print_stack_trace
		Returns: void
function debug_remove_log_function_by_data
		Returns: guint32
		data: void
function debug_set_active
		Returns: void
		active: gboolean
function debug_set_colored
		Returns: void
		colored: gboolean
function debug_set_default_threshold
		Returns: void
		level: interface for DebugLevel
function debug_set_threshold_for_name
		Returns: void
		name: utf8
		level: interface for DebugLevel
function debug_unset_threshold_for_name
		Returns: void
		name: utf8
function default_registry_check_feature_version
		Returns: gboolean
		feature_name: utf8
		min_major: guint32
		min_minor: guint32
		min_micro: guint32
function deinit
		Returns: void
function error_get_message
		Returns: utf8
		domain: guint32
		code: gint32
function filename_to_uri
		Returns: utf8
		filename: utf8
function flow_get_name
		Returns: utf8
		ret: interface for FlowReturn
function flow_to_quark
		Returns: guint32
		ret: interface for FlowReturn
function format_get_by_nick
		Returns: interface for Format
		nick: utf8
function format_get_details
		Returns: interface for FormatDefinition
		format: interface for Format
function format_get_name
		Returns: utf8
		format: interface for Format
function format_register
		Returns: interface for Format
		nick: utf8
		description: utf8
function format_to_quark
		Returns: guint32
		format: interface for Format
function formats_contains
		Returns: gboolean
		formats: interface for Format
		format: interface for Format
function implements_interface_cast
		Returns: void
		from: void
		type: GType
function implements_interface_check
		Returns: gboolean
		from: void
		type: GType
function init
		Returns: void
		argc: INOUT gint32
		argv: INOUT array of utf8
function init_check
		Returns: gboolean
		argc: INOUT gint32
		argv: INOUT array of utf8
function is_initialized
		Returns: gboolean
function is_tag_list
		Returns: gboolean
		p: void
function library_error_quark
		Returns: guint32
function param_spec_mini_object
		Returns: interface for ParamSpec
		name: utf8
		nick: utf8
		blurb: utf8
		object_type: GType
		flags: interface for ParamFlags
function param_spec_mini_object_get_type
		Returns: GType
function parse_bin_from_description
		Returns: interface for Element
		bin_description: utf8
		ghost_unlinked_pads: gboolean
function parse_bin_from_description_full
		Returns: interface for Element
		bin_description: utf8
		ghost_unlinked_pads: gboolean
		context: interface for ParseContext
		flags: interface for ParseFlags
function parse_error_quark
		Returns: guint32
function parse_launch
		Returns: interface for Element
		pipeline_description: utf8
function parse_launch_full
		Returns: interface for Element
		pipeline_description: utf8
		context: interface for ParseContext
		flags: interface for ParseFlags
function parse_launchv
		Returns: interface for Element
		argv: array of utf8
function parse_launchv_full
		Returns: interface for Element
		argv: array of utf8
		context: interface for ParseContext
		flags: interface for ParseFlags
function preset_get_app_dir
		Returns: utf8
function preset_set_app_dir
		Returns: gboolean
		app_dir: utf8
function print_element_args
		Returns: void
		buf: interface for String
		indent: gint32
		element: interface for Element
function print_pad_caps
		Returns: void
		buf: interface for String
		indent: gint32
		pad: interface for Pad
function resource_error_quark
		Returns: guint32
function segtrap_is_enabled
		Returns: gboolean
function segtrap_set_enabled
		Returns: void
		enabled: gboolean
function static_caps_get_type
		Returns: GType
function static_pad_template_get_type
		Returns: GType
function stream_error_quark
		Returns: guint32
function structure_from_string
		Returns: interface for Structure
		string: utf8
		end: OUT utf8
function tag_exists
		Returns: gboolean
		tag: utf8
function tag_get_description
		Returns: utf8
		tag: utf8
function tag_get_flag
		Returns: interface for TagFlag
		tag: utf8
function tag_get_nick
		Returns: utf8
		tag: utf8
function tag_get_type
		Returns: GType
		tag: utf8
function tag_is_fixed
		Returns: gboolean
		tag: utf8
function tag_list_copy_value
		Returns: gboolean
		dest: OUT interface for Value
		list: interface for TagList
		tag: utf8
function tag_merge_strings_with_comma
		Returns: void
		dest: OUT interface for Value
		src: interface for Value
function tag_merge_use_first
		Returns: void
		dest: OUT interface for Value
		src: interface for Value
function trace_read_tsc
		Returns: void
		dst: gint64
function type_find_get_type
		Returns: GType
function type_find_register
		Returns: gboolean
		plugin: interface for Plugin
		name: utf8
		rank: guint32
		func: interface for TypeFindFunction
		extensions: array of utf8
		possible_caps: interface for Caps
		data: void
		data_notify: interface for DestroyNotify
function update_registry
		Returns: gboolean
function uri_construct
		Returns: array of utf8
		protocol: utf8
		location: array of utf8
function uri_get_location
		Returns: array of utf8
		uri: utf8
function uri_get_protocol
		Returns: utf8
		uri: utf8
function uri_has_protocol
		Returns: gboolean
		uri: utf8
		protocol: utf8
function uri_is_valid
		Returns: gboolean
		uri: utf8
function uri_protocol_is_supported
		Returns: gboolean
		type: interface for URIType
		protocol: utf8
function uri_protocol_is_valid
		Returns: gboolean
		protocol: utf8
function util_array_binary_search
		Returns: void
		array: void
		num_elements: guint32
		element_size: guint64
		search_func: interface for CompareDataFunc
		mode: interface for SearchMode
		search_data: void
		user_data: void
function util_double_to_fraction
		Returns: void
		src: gdouble
		dest_n: OUT gint32
		dest_d: OUT gint32
function util_dump_mem
		Returns: void
		mem: guint8
		size: guint32
function util_fraction_add
		Returns: gboolean
		a_n: gint32
		a_d: gint32
		b_n: gint32
		b_d: gint32
		res_n: OUT gint32
		res_d: OUT gint32
function util_fraction_compare
		Returns: gint32
		a_n: gint32
		a_d: gint32
		b_n: gint32
		b_d: gint32
function util_fraction_multiply
		Returns: gboolean
		a_n: gint32
		a_d: gint32
		b_n: gint32
		b_d: gint32
		res_n: OUT gint32
		res_d: OUT gint32
function util_fraction_to_double
		Returns: void
		src_n: gint32
		src_d: gint32
		dest: OUT gdouble
function util_gdouble_to_guint64
		Returns: guint64
		value: gdouble
function util_get_timestamp
		Returns: guint64
function util_greatest_common_divisor
		Returns: gint32
		a: gint32
		b: gint32
function util_guint64_to_gdouble
		Returns: gdouble
		value: guint64
function util_seqnum_compare
		Returns: gint32
		s1: guint32
		s2: guint32
function util_seqnum_next
		Returns: guint32
function util_set_object_arg
		Returns: void
		object: interface for Object
		name: utf8
		value: utf8
function util_set_value_from_string
		Returns: void
		value: OUT interface for Value
		value_str: utf8
function util_uint64_scale
		Returns: guint64
		val: guint64
		num: guint64
		denom: guint64
function util_uint64_scale_ceil
		Returns: guint64
		val: guint64
		num: guint64
		denom: guint64
function util_uint64_scale_int
		Returns: guint64
		val: guint64
		num: gint32
		denom: gint32
function util_uint64_scale_int_ceil
		Returns: guint64
		val: guint64
		num: gint32
		denom: gint32
function util_uint64_scale_int_round
		Returns: guint64
		val: guint64
		num: gint32
		denom: gint32
function util_uint64_scale_round
		Returns: guint64
		val: guint64
		num: guint64
		denom: guint64
function value_can_compare
		Returns: gboolean
		value1: interface for Value
		value2: interface for Value
function value_can_intersect
		Returns: gboolean
		value1: interface for Value
		value2: interface for Value
function value_can_subtract
		Returns: gboolean
		minuend: interface for Value
		subtrahend: interface for Value
function value_can_union
		Returns: gboolean
		value1: interface for Value
		value2: interface for Value
function value_compare
		Returns: gint32
		value1: interface for Value
		value2: interface for Value
function value_deserialize
		Returns: gboolean
		dest: OUT interface for Value
		src: utf8
function value_dup_mini_object
		Returns: interface for MiniObject
		value: interface for Value
function value_fraction_multiply
		Returns: gboolean
		product: interface for Value
		factor1: interface for Value
		factor2: interface for Value
function value_fraction_subtract
		Returns: gboolean
		dest: interface for Value
		minuend: interface for Value
		subtrahend: interface for Value
function value_get_caps
		Returns: interface for Caps
		value: interface for Value
function value_get_date
		Returns: interface for Date
		value: interface for Value
function value_get_double_range_max
		Returns: gdouble
		value: interface for Value
function value_get_double_range_min
		Returns: gdouble
		value: interface for Value
function value_get_fourcc
		Returns: guint32
		value: interface for Value
function value_get_fraction_denominator
		Returns: gint32
		value: interface for Value
function value_get_fraction_numerator
		Returns: gint32
		value: interface for Value
function value_get_fraction_range_max
		Returns: interface for Value
		value: interface for Value
function value_get_fraction_range_min
		Returns: interface for Value
		value: interface for Value
function value_get_int64_range_max
		Returns: gint64
		value: interface for Value
function value_get_int64_range_min
		Returns: gint64
		value: interface for Value
function value_get_int_range_max
		Returns: gint32
		value: interface for Value
function value_get_int_range_min
		Returns: gint32
		value: interface for Value
function value_get_mini_object
		Returns: interface for MiniObject
		value: interface for Value
function value_get_structure
		Returns: interface for Structure
		value: interface for Value
function value_init_and_copy
		Returns: void
		dest: OUT interface for Value
		src: interface for Value
function value_intersect
		Returns: gboolean
		dest: OUT interface for Value
		value1: interface for Value
		value2: interface for Value
function value_is_fixed
		Returns: gboolean
		value: interface for Value
function value_register
		Returns: void
		table: interface for ValueTable
function value_serialize
		Returns: utf8
		value: interface for Value
function value_set_caps
		Returns: void
		value: interface for Value
		caps: interface for Caps
function value_set_date
		Returns: void
		value: interface for Value
		date: interface for Date
function value_set_double_range
		Returns: void
		value: interface for Value
		start: gdouble
		end: gdouble
function value_set_fourcc
		Returns: void
		value: interface for Value
		fourcc: guint32
function value_set_fraction
		Returns: void
		value: interface for Value
		numerator: gint32
		denominator: gint32
function value_set_fraction_range
		Returns: void
		value: interface for Value
		start: interface for Value
		end: interface for Value
function value_set_fraction_range_full
		Returns: void
		value: interface for Value
		numerator_start: gint32
		denominator_start: gint32
		numerator_end: gint32
		denominator_end: gint32
function value_set_int64_range
		Returns: void
		value: interface for Value
		start: gint64
		end: gint64
function value_set_int_range
		Returns: void
		value: interface for Value
		start: gint32
		end: gint32
function value_set_mini_object
		Returns: void
		value: interface for Value
		mini_object: interface for MiniObject
function value_set_structure
		Returns: void
		value: interface for Value
		structure: interface for Structure
function value_subtract
		Returns: gboolean
		dest: OUT interface for Value
		minuend: interface for Value
		subtrahend: interface for Value
function value_take_mini_object
		Returns: void
		value: interface for Value
		mini_object: interface for MiniObject
function value_union
		Returns: gboolean
		dest: OUT interface for Value
		value1: interface for Value
		value2: interface for Value
function version
		Returns: void
		major: OUT guint32
		minor: OUT guint32
		micro: OUT guint32
		nano: OUT guint32
function version_string
		Returns: utf8
