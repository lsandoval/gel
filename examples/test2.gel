
[def primes-less-than [top]
    [var sieve [array 2]]
    [var n 3]
    [while [< n top]
        [if [all [lambda [i] [% n i]] sieve]
            [append sieve n]
        ]
        [= n [+ n 2]]
    ]
    sieve
]

[var i 0]
[for iter [primes-less-than 100]
    [print "Primes[" i "] = " iter]
    [= i [+ i 1]]
]


[def factorial [n]
    [cond
        [<= n 0]
            1
        [> n 0]
            [* n [factorial [- n 1]]]
    ]
]

[var n 10]
[print "Factorial of " n " is " [factorial n]]


[def fibonacci [n]
    [case n
        0 0
        1 1
          [+ [fibonacci [- n 1]] [fibonacci [- n 2]]]
    ]
]

[var i 0]
[while [le i 10]
    [print "Fibonacci[" i "] = " [fibonacci i]]
    [= i [+ i 1]]
]


[quit]

