
(function generate-primes ()
    (define primes [])
    (define candidate 2)

    (function none-prime (predicate)
        (= (find predicate primes) -1)
    )

    (function can-divide-candidate (i)
        (= (% candidate i) 0)
    )

    (function ()
        (define calculated-prime 0)
        (while (= calculated-prime 0)
            (if (none-prime can-divide-candidate)
                (do
                    (append primes candidate)
                    (set calculated-prime candidate)
                )
            )
            (set candidate (+ candidate 1))
        )
        calculated-prime
    )
)

(define next-prime (generate-primes))

(for i (range 1 12)
    (print i "=" (next-prime))
)

