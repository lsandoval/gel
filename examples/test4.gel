
(define (draw-polygon circumference vertices)
    (let body (
        (side (/ circumference vertices))
        (angle (/ 360 vertices))
        )
        (let iterate (
            (i 0)
            )
            (when (< i vertices)
                (print "move " side)
                (print "turn " angle)
                (iterate (+ i 1))
            )
        )
    )
)

(draw-polygon 120 4)


(define (generate-primes)
    (define primes (array))
    (define candidate 2)
    (define (cannot-divide-candidate i)
        (% candidate i)
    )
    (lambda ()
        (define calculating TRUE)
        (while calculating
            (when (all cannot-divide-candidate primes)
                (append primes candidate)
                (define result candidate)
                (set calculating FALSE)
            )
            (= candidate (+ candidate 1))
        )
        result
    )
)

(define next-prime (generate-primes))

(for i (range 1 12)
    (print "Primes(" i ") = " (next-prime))
)

(quit)
