
(def fundamentals
    (hash
        ("e" 2.718281828459045)
        ("pi" 3.141592653589793)
        ("c" 299792458)
    )
)

(print fundamentals)

(hash-size fundamentals)

(hash-set! fundamentals "g" 9.822)

(print fundamentals)

(hash-remove! fundamentals "c")

(hash-get fundamentals "pi")

(hash-keys fundamentals)

(defn hash-values (h)
    (map
        (closure (k)
            (hash-get h k)
        )
        (hash-keys h)
    )
)

(hash-values fundamentals)


(def romans
    (hash
        (1000 "M")
        (900 "CM")
        (500 "D")
        (400 "CD")
        (100 "C")
        (90 "XC")
        (50 "L")
        (40 "XL")
        (10 "X")
        (9 "IX")
        (5 "V")
        (4 "IV")
        (1 "I")
    )
)

(apply +
    (map
        (closure (i) (hash-get romans i))
        (array 1000 900 50 10 10 5 1 1)
    )
)


(defn Person (name age)
    (def self (hash))
    (hash-append! self
        ("name" name)
        ("age" age)
        ("greet"
            (fn (name-of-person)
                (print "Nice to meet you " name-of-person)
                (print "I am " (hash-get self "name"))
            )
        )
        ("set"
            (fn (attr value)
                (case attr
                    ( ("age")
                        (print "Now I am " value " years old")
                        (hash-set! self "age" value)
                    )
                    (else
                        (print "I don't think you can change my " attr)
                    )
                )
            )
        )
    )
    (fn (s)
        (hash-get self s)
    )
)

(def mary (Person "Maria Romanov" 35))

(print "My name is " (mary "name") " and I'm " (mary "age"))
( (mary "greet") "Hanna")

( (mary "set") "age" 37)
(mary "age")

( (mary "set") "name" "Boris")

